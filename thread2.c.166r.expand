
;; Function length (length, funcdef_no=0, decl_uid=11956, cgraph_uid=0)

length (double * array)
{
  int D.12003;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )

length (double * array)
{
  int D.12003;
  int _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 1;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 1;

(insn 6 5 0 (set (reg:SI 59 [ D.12040 ])
        (const_int 1 [0x1])) backgroundfunctions.h:13 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 7 6 8 2 "" [0 uses])

(note 8 7 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 9 8 10 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.12040 ])) backgroundfunctions.h:13 -1
     (nil))

(jump_insn 10 9 11 (set (pc)
        (label_ref 0)) backgroundfunctions.h:13 -1
     (nil))

(barrier 11 10 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) backgroundfunctions.h:12 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 59 [ D.12040 ])
        (const_int 1 [0x1])) backgroundfunctions.h:13 -1
     (nil))
(insn 9 6 13 2 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.12040 ])) backgroundfunctions.h:13 -1
     (nil))
(insn 13 9 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) backgroundfunctions.h:14 -1
     (nil))
(insn 16 13 0 2 (use (reg/i:SI 0 ax)) backgroundfunctions.h:14 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function create2DArray (create2DArray, funcdef_no=1, decl_uid=11960, cgraph_uid=1)

create2DArray (int rows, int columns)
{
  int i;
  double * * array;
  double * * D.12013;
  void * D.12012;
  long unsigned int D.12011;
  long unsigned int D.12010;
  double * * D.12009;
  long unsigned int D.12008;
  long unsigned int D.12007;
  long unsigned int D.12006;
  long unsigned int D.12005;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _7;
  long unsigned int _8;
  double * * _9;
  long unsigned int _11;
  long unsigned int _12;
  void * _13;
  double * * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (long unsigned int) rows_2(D);
  _4 = _3 * 8;
  array_5 = malloc (_4);
  i_6 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _7 = (long unsigned int) i_1;
  _8 = _7 * 8;
  _9 = array_5 + _8;
  _11 = (long unsigned int) columns_10(D);
  _12 = _11 * 8;
  _13 = malloc (_12);
  *_9 = _13;
  i_14 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_6(2), i_14(3)>
  if (i_1 < rows_2(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _15 = array_5;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _15;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (rows_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (array_5 - 5 )
Partition 6 (i_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (columns_10(D) - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (i_14 - 14 )
Partition 15 (_15 - 15 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (rows_2(D) - 2 )
Partition 2 (i_6 - 6 )
Partition 3 (columns_10(D) - 10 )
Partition 4 (i_14 - 14 )


Live on entry to BB2 : rows_2(D)  columns_10(D)  

Live on entry to BB3 : i_1  rows_2(D)  columns_10(D)  

Live on entry to BB4 : rows_2(D)  columns_10(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_14
(2147483646) i_1 <-> i_6

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (rows_2(D) - 2 )
Partition 2 (i_6 - 6 )
Partition 3 (columns_10(D) - 10 )
Partition 4 (i_14 - 14 )

Coalesce list: (1)i_1 & (14)i_14 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (6)i_6 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (14)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (6)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 6 14 )
Partition 1 (rows_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (array_5 - 5 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (columns_10(D) - 10 )
Partition 9 (_11 - 11 )
Partition 10 (_12 - 12 )
Partition 11 (_13 - 13 )
Partition 12 (_15 - 15 )

create2DArray (int rows, int columns)
{
  int i;
  double * * array;
  double * * D.12013;
  void * D.12012;
  long unsigned int D.12011;
  long unsigned int D.12010;
  double * * D.12009;
  long unsigned int D.12008;
  long unsigned int D.12007;
  long unsigned int D.12006;
  long unsigned int D.12005;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _7;
  long unsigned int _8;
  double * * _9;
  long unsigned int _11;
  long unsigned int _12;
  void * _13;
  double * * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = (long unsigned int) rows_2(D);
  _4 = _3 * 8;
  array_5 = malloc (_4);
  i_6 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _7 = (long unsigned int) i_1;
  _8 = _7 * 8;
  _9 = array_5 + _8;
  _11 = (long unsigned int) columns_10(D);
  _12 = _11 * 8;
  _13 = malloc (_12);
  *_9 = _13;
  i_14 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_6(2), i_14(3)>
  if (i_1 < rows_2(D))
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _15 = array_5;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L3>:
  return _15;
;;    succ:       EXIT

}


Partition 1: size 8 align 8
	array_5
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; _3 = (long unsigned int) rows_2(D);

(insn 7 6 8 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32])) backgroundfunctions.h:27 -1
     (nil))

(insn 8 7 0 (set (reg:DI 59 [ D.12041 ])
        (sign_extend:DI (reg:SI 69))) backgroundfunctions.h:27 -1
     (nil))

;; _4 = _3 * 8;

(insn 9 8 0 (parallel [
            (set (reg:DI 60 [ D.12041 ])
                (ashift:DI (reg:DI 59 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:27 -1
     (nil))

;; array_5 = malloc (_4);

(insn 10 9 11 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12041 ])) backgroundfunctions.h:27 -1
     (nil))

(call_insn 11 10 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:27 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 12 11 13 (set (reg/f:DI 70)
        (reg:DI 0 ax)) backgroundfunctions.h:27 -1
     (expr_list:REG_NOALIAS (reg/f:DI 70)
        (nil)))

(insn 13 12 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 70)) backgroundfunctions.h:27 -1
     (nil))

;; i_6 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) backgroundfunctions.h:28 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = (long unsigned int) i_1;

(insn 18 17 19 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:29 -1
     (nil))

(insn 19 18 0 (set (reg:DI 61 [ D.12041 ])
        (sign_extend:DI (reg:SI 71))) backgroundfunctions.h:29 -1
     (nil))

;; _8 = _7 * 8;

(insn 20 19 0 (parallel [
            (set (reg:DI 62 [ D.12041 ])
                (ashift:DI (reg:DI 61 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (nil))

;; _9 = array_5 + _8;

(insn 21 20 22 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:29 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg/f:DI 63 [ D.12042 ])
                (plus:DI (reg:DI 62 [ D.12041 ])
                    (reg/f:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
            (reg:DI 62 [ D.12041 ]))
        (nil)))

;; _11 = (long unsigned int) columns_10(D);

(insn 23 22 24 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 columns+0 S4 A32])) backgroundfunctions.h:29 -1
     (nil))

(insn 24 23 0 (set (reg:DI 64 [ D.12041 ])
        (sign_extend:DI (reg:SI 73))) backgroundfunctions.h:29 -1
     (nil))

;; _12 = _11 * 8;

(insn 25 24 0 (parallel [
            (set (reg:DI 65 [ D.12041 ])
                (ashift:DI (reg:DI 64 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (nil))

;; _13 = malloc (_12);

(insn 26 25 27 (set (reg:DI 5 di)
        (reg:DI 65 [ D.12041 ])) backgroundfunctions.h:29 -1
     (nil))

(call_insn 27 26 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:29 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 28 27 29 (set (reg/f:DI 74)
        (reg:DI 0 ax)) backgroundfunctions.h:29 -1
     (expr_list:REG_NOALIAS (reg/f:DI 74)
        (nil)))

(insn 29 28 0 (set (reg/f:DI 66 [ D.12043 ])
        (reg/f:DI 74)) backgroundfunctions.h:29 -1
     (nil))

;; *_9 = _13;

(insn 30 29 0 (set (mem/f:DI (reg/f:DI 63 [ D.12042 ]) [0 *_9+0 S8 A64])
        (reg/f:DI 66 [ D.12043 ])) backgroundfunctions.h:29 -1
     (nil))

;; i_14 = i_1 + 1;

(insn 31 30 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:28 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 32 31 33 4 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 < rows_2(D))

(insn 35 33 36 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:28 -1
     (nil))

(insn 36 35 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 75)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32]))) backgroundfunctions.h:28 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) backgroundfunctions.h:28 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _15 = array_5;

(insn 39 38 0 (set (reg/f:DI 67 [ D.12042 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:31 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; <L3>:

(code_label 40 39 41 6 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; return _15;

(insn 42 41 43 (set (reg:DI 68 [ <retval> ])
        (reg/f:DI 67 [ D.12042 ])) backgroundfunctions.h:31 -1
     (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 0)) backgroundfunctions.h:31 -1
     (nil))

(barrier 44 43 0)
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 8 into block 6...
Merged blocks 6 and 8.
Merged 6 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32])
        (reg:SI 5 di [ rows ])) backgroundfunctions.h:25 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 columns+0 S4 A32])
        (reg:SI 4 si [ columns ])) backgroundfunctions.h:25 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32])) backgroundfunctions.h:27 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 59 [ D.12041 ])
        (sign_extend:DI (reg:SI 69))) backgroundfunctions.h:27 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 60 [ D.12041 ])
                (ashift:DI (reg:DI 59 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:27 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12041 ])) backgroundfunctions.h:27 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:27 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 70)
        (reg:DI 0 ax)) backgroundfunctions.h:27 -1
     (expr_list:REG_NOALIAS (reg/f:DI 70)
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 70)) backgroundfunctions.h:27 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) backgroundfunctions.h:28 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (label_ref 32)) backgroundfunctions.h:28 -1
     (nil)
 -> 32)
;;  succ:       5

(barrier 16 15 34)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 34 16 17 4 5 "" [1 uses])
(note 17 34 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:29 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 61 [ D.12041 ])
        (sign_extend:DI (reg:SI 71))) backgroundfunctions.h:29 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 62 [ D.12041 ])
                (ashift:DI (reg:DI 61 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:29 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg/f:DI 63 [ D.12042 ])
                (plus:DI (reg:DI 62 [ D.12041 ])
                    (reg/f:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
            (reg:DI 62 [ D.12041 ]))
        (nil)))
(insn 23 22 24 4 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 columns+0 S4 A32])) backgroundfunctions.h:29 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 64 [ D.12041 ])
        (sign_extend:DI (reg:SI 73))) backgroundfunctions.h:29 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 65 [ D.12041 ])
                (ashift:DI (reg:DI 64 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 65 [ D.12041 ])) backgroundfunctions.h:29 -1
     (nil))
(call_insn 27 26 28 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:29 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 74)
        (reg:DI 0 ax)) backgroundfunctions.h:29 -1
     (expr_list:REG_NOALIAS (reg/f:DI 74)
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 66 [ D.12043 ])
        (reg/f:DI 74)) backgroundfunctions.h:29 -1
     (nil))
(insn 30 29 31 4 (set (mem/f:DI (reg/f:DI 63 [ D.12042 ]) [0 *_9+0 S8 A64])
        (reg/f:DI 66 [ D.12043 ])) backgroundfunctions.h:29 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:28 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 32 31 33 5 4 "" [1 uses])
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 5 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:28 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 75)
            (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32]))) backgroundfunctions.h:28 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) backgroundfunctions.h:28 -1
     (nil)
 -> 34)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 6 (set (reg/f:DI 67 [ D.12042 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:31 -1
     (nil))
(insn 42 39 46 6 (set (reg:DI 68 [ <retval> ])
        (reg/f:DI 67 [ D.12042 ])) backgroundfunctions.h:31 -1
     (nil))
(insn 46 42 49 6 (set (reg/i:DI 0 ax)
        (reg:DI 68 [ <retval> ])) backgroundfunctions.h:32 -1
     (nil))
(insn 49 46 0 6 (use (reg/i:DI 0 ax)) backgroundfunctions.h:32 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function create1DArray (create1DArray, funcdef_no=2, decl_uid=11968, cgraph_uid=2)

create1DArray (int columns)
{
  double * array;
  double * D.12017;
  long unsigned int D.12016;
  long unsigned int D.12015;
  long unsigned int _2;
  long unsigned int _3;
  double * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = (long unsigned int) columns_1(D);
  _3 = _2 * 8;
  array_4 = malloc (_3);
  _5 = array_4;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 1 (columns_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (array_4 - 4 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (columns_1(D) - 1 )


Live on entry to BB2 : columns_1(D)  

Live on entry to BB3 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (columns_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (columns_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (array_4 - 4 )
Partition 4 (_5 - 5 )

create1DArray (int columns)
{
  double * array;
  double * D.12017;
  long unsigned int D.12016;
  long unsigned int D.12015;
  long unsigned int _2;
  long unsigned int _3;
  double * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = (long unsigned int) columns_1(D);
  _3 = _2 * 8;
  array_4 = malloc (_3);
  _5 = array_4;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _5;
;;    succ:       EXIT

}


Partition 0: size 8 align 8
	array_4

;; Generating RTL for gimple basic block 2

;; _2 = (long unsigned int) columns_1(D);

(insn 6 5 7 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])) backgroundfunctions.h:44 -1
     (nil))

(insn 7 6 0 (set (reg:DI 59 [ D.12044 ])
        (sign_extend:DI (reg:SI 63))) backgroundfunctions.h:44 -1
     (nil))

;; _3 = _2 * 8;

(insn 8 7 0 (parallel [
            (set (reg:DI 60 [ D.12044 ])
                (ashift:DI (reg:DI 59 [ D.12044 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:44 -1
     (nil))

;; array_4 = malloc (_3);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12044 ])) backgroundfunctions.h:44 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(insn 11 10 12 (set (reg/f:DI 64)
        (reg:DI 0 ax)) backgroundfunctions.h:44 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))

(insn 12 11 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 64)) backgroundfunctions.h:44 -1
     (nil))

;; _5 = array_4;

(insn 13 12 0 (set (reg/f:DI 61 [ D.12045 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:45 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 14 13 15 8 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; return _5;

(insn 16 15 17 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 61 [ D.12045 ])) backgroundfunctions.h:45 -1
     (nil))

(jump_insn 17 16 18 (set (pc)
        (label_ref 0)) backgroundfunctions.h:45 -1
     (nil))

(barrier 18 17 0)
deleting block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])
        (reg:SI 5 di [ columns ])) backgroundfunctions.h:42 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])) backgroundfunctions.h:44 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 59 [ D.12044 ])
        (sign_extend:DI (reg:SI 63))) backgroundfunctions.h:44 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 60 [ D.12044 ])
                (ashift:DI (reg:DI 59 [ D.12044 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:44 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12044 ])) backgroundfunctions.h:44 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:44 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) backgroundfunctions.h:44 -1
     (expr_list:REG_NOALIAS (reg/f:DI 64)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 64)) backgroundfunctions.h:44 -1
     (nil))
(insn 13 12 16 2 (set (reg/f:DI 61 [ D.12045 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:45 -1
     (nil))
(insn 16 13 20 2 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 61 [ D.12045 ])) backgroundfunctions.h:45 -1
     (nil))
(insn 20 16 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 62 [ <retval> ])) backgroundfunctions.h:46 -1
     (nil))
(insn 23 20 0 2 (use (reg/i:DI 0 ax)) backgroundfunctions.h:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function sorRow (sorRow, funcdef_no=3, decl_uid=11977, cgraph_uid=3)

sorRow (void * threadarg)
{
  int i;
  double * thread_array;
  double D.12024;
  double * D.12023;
  double D.12022;
  double * D.12021;
  long unsigned int D.12020;
  long unsigned int D.12019;
  long unsigned int _5;
  long unsigned int _6;
  double * _7;
  double _8;
  double * _10;
  double _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  thread_array_3 = threadarg_2(D);
  i_4 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = (long unsigned int) i_1;
  _6 = _5 * 8;
  _7 = thread_array_3 + _6;
  _8 = (double) i_1;
  *_7 = _8;
  i_9 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_4(2), i_9(3)>
  if (i_1 <= 9)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _10 = thread_array_3 + 16;
  _11 = *_10;
  printf ("arr[2]: %f\n", _11);
  pthread_exit (thread_array_3);
;;    succ:      

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (threadarg_2(D) - 2 )
Partition 3 (thread_array_3 - 3 )
Partition 4 (i_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (i_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (threadarg_2(D) - 2 )
Partition 2 (i_4 - 4 )
Partition 3 (i_9 - 9 )


Live on entry to BB2 : threadarg_2(D)  

Live on entry to BB3 : i_1  

Live on entry to BB4 : 

Live on entry to BB5 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_9
(2147483646) i_1 <-> i_4

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (threadarg_2(D) - 2 )
Partition 2 (i_4 - 4 )
Partition 3 (i_9 - 9 )

Coalesce list: (1)i_1 & (9)i_9 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (4)i_4 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (9)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (4)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 4 9 )
Partition 1 (threadarg_2(D) - 2 )
Partition 2 (thread_array_3 - 3 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )

sorRow (void * threadarg)
{
  int i;
  double * thread_array;
  double D.12024;
  double * D.12023;
  double D.12022;
  double * D.12021;
  long unsigned int D.12020;
  long unsigned int D.12019;
  long unsigned int _5;
  long unsigned int _6;
  double * _7;
  double _8;
  double * _10;
  double _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  thread_array_3 = threadarg_2(D);
  i_4 = 0;
  goto <bb 4>;
;;    succ:       4

;;   basic block 3, loop depth 0
;;    pred:       4
  _5 = (long unsigned int) i_1;
  _6 = _5 * 8;
  _7 = thread_array_3 + _6;
  _8 = (double) i_1;
  *_7 = _8;
  i_9 = i_1 + 1;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # i_1 = PHI <i_4(2), i_9(3)>
  if (i_1 <= 9)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _10 = thread_array_3 + 16;
  _11 = *_10;
  printf ("arr[2]: %f\n", _11);
  pthread_exit (thread_array_3);
;;    succ:      

}


Partition 1: size 8 align 8
	thread_array_3
Partition 0: size 4 align 4
	i_1

;; Generating RTL for gimple basic block 2

;; thread_array_3 = threadarg_2(D);

(insn 6 5 7 (set (reg/f:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])) thread2.c:17 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
        (reg/f:DI 66)) thread2.c:17 -1
     (nil))

;; i_4 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) thread2.c:18 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = (long unsigned int) i_1;

(insn 12 11 13 (set (reg:SI 67)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) thread2.c:19 -1
     (nil))

(insn 13 12 0 (set (reg:DI 59 [ D.12046 ])
        (sign_extend:DI (reg:SI 67))) thread2.c:19 -1
     (nil))

;; _6 = _5 * 8;

(insn 14 13 0 (parallel [
            (set (reg:DI 60 [ D.12046 ])
                (ashift:DI (reg:DI 59 [ D.12046 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 -1
     (nil))

;; _7 = thread_array_3 + _6;

(insn 15 14 16 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:19 -1
     (nil))

(insn 16 15 0 (parallel [
            (set (reg/f:DI 61 [ D.12047 ])
                (plus:DI (reg:DI 60 [ D.12046 ])
                    (reg/f:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
            (reg:DI 60 [ D.12046 ]))
        (nil)))

;; _8 = (double) i_1;

(insn 17 16 0 (set (reg:DF 62 [ D.12048 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) thread2.c:19 -1
     (nil))

;; *_7 = _8;

(insn 18 17 0 (set (mem:DF (reg/f:DI 61 [ D.12047 ]) [0 *_7+0 S8 A64])
        (reg:DF 62 [ D.12048 ])) thread2.c:19 -1
     (nil))

;; i_9 = i_1 + 1;

(insn 19 18 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:18 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 10 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_1 <= 9)

(insn 23 21 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 9 [0x9]))) thread2.c:18 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) thread2.c:18 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _10 = thread_array_3 + 16;

(insn 26 25 27 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:21 -1
     (nil))

(insn 27 26 0 (parallel [
            (set (reg/f:DI 63 [ D.12047 ])
                (plus:DI (reg/f:DI 69)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:21 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _11 = *_10;

(insn 28 27 0 (set (reg:DF 64 [ D.12048 ])
        (mem:DF (reg/f:DI 63 [ D.12047 ]) [0 *_10+0 S8 A64])) thread2.c:21 -1
     (nil))

;; printf ("arr[2]: %f\n", _11);

(insn 29 28 30 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12048 ])) thread2.c:21 -1
     (nil))

(insn 30 29 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff8f7eb65f0 *.LC0>)) thread2.c:21 -1
     (nil))

(insn 31 30 32 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:21 -1
     (nil))

(call_insn 32 31 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:21 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))

;; pthread_exit (thread_array_3);

(insn 33 32 34 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:22 -1
     (nil))

(insn 34 33 35 (set (reg:DI 5 di)
        (reg:DI 70)) thread2.c:22 -1
     (nil))

(call_insn 35 34 36 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:22 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(barrier 36 35 0)
deleting block 8
deleting block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])
        (reg:DI 5 di [ threadarg ])) thread2.c:15 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])) thread2.c:17 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
        (reg/f:DI 66)) thread2.c:17 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) thread2.c:18 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (label_ref 20)) thread2.c:18 -1
     (nil)
 -> 20)
;;  succ:       5

(barrier 10 9 22)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 22 10 11 4 11 "" [1 uses])
(note 11 22 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 67)
        (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) thread2.c:19 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 59 [ D.12046 ])
        (sign_extend:DI (reg:SI 67))) thread2.c:19 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 60 [ D.12046 ])
                (ashift:DI (reg:DI 59 [ D.12046 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:19 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/f:DI 61 [ D.12047 ])
                (plus:DI (reg:DI 60 [ D.12046 ])
                    (reg/f:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
            (reg:DI 60 [ D.12046 ]))
        (nil)))
(insn 17 16 18 4 (set (reg:DF 62 [ D.12048 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) thread2.c:19 -1
     (nil))
(insn 18 17 19 4 (set (mem:DF (reg/f:DI 61 [ D.12047 ]) [0 *_7+0 S8 A64])
        (reg:DF 62 [ D.12048 ])) thread2.c:19 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:18 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 20 19 21 5 10 "" [1 uses])
(note 21 20 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 21 24 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 9 [0x9]))) thread2.c:18 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) thread2.c:18 -1
     (nil)
 -> 22)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:21 -1
     (nil))
(insn 27 26 28 6 (parallel [
            (set (reg/f:DI 63 [ D.12047 ])
                (plus:DI (reg/f:DI 69)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:21 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 28 27 29 6 (set (reg:DF 64 [ D.12048 ])
        (mem:DF (reg/f:DI 63 [ D.12047 ]) [0 *_10+0 S8 A64])) thread2.c:21 -1
     (nil))
(insn 29 28 30 6 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12048 ])) thread2.c:21 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff8f7eb65f0 *.LC0>)) thread2.c:21 -1
     (nil))
(insn 31 30 32 6 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:21 -1
     (nil))
(call_insn 32 31 33 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:21 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 33 32 34 6 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:22 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg:DI 70)) thread2.c:22 -1
     (nil))
(call_insn 35 34 36 6 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:22 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 36 35 0)

;; Function main (main, funcdef_no=4, decl_uid=11986, cgraph_uid=4)

main (int argc, const char * * argv)
{
  double * array;
  void * retval;
  long int t;
  double * array;
  long int t;
  int rc;
  union pthread_attr_t attr;
  pthread_t threads[3];
  int D.12033;
  double D.12032;
  double * D.12031;
  long unsigned int D.12030;
  pthread_t * D.12027;
  double * array.0;
  int D.12025;
  int _4;
  pthread_t * _6;
  long unsigned int _10;
  double * _13;
  double _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  pthread_attr_init (&attr);
  pthread_attr_setdetachstate (&attr, 0);
  t_3 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _4 = (int) t_1;
  thread_data_array[t_1].thread_id = _4;
  thread_data_array[t_1].tol = 1.00000000000000002081668171172168513294309377670288085938e-3;
  array.0_5 = create1DArray (10);
  array = array.0_5;
  printf ("In main, creating thread %ld\n", t_1);
  _6 = &threads[t_1];
  rc_7 = pthread_create (_6, &attr, sorRow, &array);
  if (rc_7 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin_puts (&"Error"[0]);
  exit (-1);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  array ={v} {CLOBBER};
  t_8 = t_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # t_1 = PHI <t_3(2), t_8(5)>
  if (t_1 <= 2)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  t_9 = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       9
  _10 = threads[t_2];
  rc_11 = pthread_join (_10, &retval);
  array_12 = retval;
  _13 = array_12 + 16;
  _14 = *_13;
  printf ("In main, returned %f\n", _14);
  retval ={v} {CLOBBER};
  t_15 = t_2 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # t_2 = PHI <t_9(7), t_15(8)>
  if (t_2 <= 2)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  pthread_exit (0B);
;;    succ:      

}



Partition map 

Partition 1 (t_1 - 1 )
Partition 2 (t_2 - 2 )
Partition 3 (t_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (array.0_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (rc_7 - 7 )
Partition 8 (t_8 - 8 )
Partition 9 (t_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (rc_11 - 11 )
Partition 12 (array_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (t_15 - 15 )


Partition map 

Partition 0 (t_1 - 1 )
Partition 1 (t_2 - 2 )
Partition 2 (t_3 - 3 )
Partition 3 (rc_7 - 7 )
Partition 4 (t_8 - 8 )
Partition 5 (t_9 - 9 )
Partition 6 (rc_11 - 11 )
Partition 7 (t_15 - 15 )


Live on entry to BB2 : 

Live on entry to BB3 : t_1  

Live on entry to BB4 : 

Live on entry to BB5 : t_1  

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : t_2  

Live on entry to BB9 : 

Live on entry to BB10 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) t_1 <-> t_3
(2147483646) t_1 <-> t_8
(2147483646) t_2 <-> t_9
(2147483646) t_2 <-> t_15
(2147483646) rc_7 <-> rc_11

Partition map 

Partition 0 (t_1 - 1 )
Partition 1 (t_2 - 2 )
Partition 2 (t_3 - 3 )
Partition 3 (rc_7 - 7 )
Partition 4 (t_8 - 8 )
Partition 5 (t_9 - 9 )
Partition 6 (rc_11 - 11 )
Partition 7 (t_15 - 15 )

Coalesce list: (1)t_1 & (3)t_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)t_1 & (8)t_8 [map: 0, 4] : Success -> 0
Coalesce list: (2)t_2 & (9)t_9 [map: 1, 5] : Success -> 1
Coalesce list: (2)t_2 & (15)t_15 [map: 1, 7] : Success -> 1
Coalesce list: (7)rc_7 & (11)rc_11 [map: 3, 6] : Success -> 3
Coalesce list: (2)t_2 & (15)t_2: Already Coalesced.
Coalesce list: (2)t_2 & (9)t_2: Already Coalesced.
Coalesce list: (1)t_1 & (8)t_1: Already Coalesced.
Coalesce list: (1)t_1 & (3)t_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (t_1 - 1 3 8 )
Partition 1 (t_2 - 2 9 15 )
Partition 2 (_4 - 4 )
Partition 3 (array.0_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (rc_7 - 7 11 )
Partition 6 (_10 - 10 )
Partition 7 (array_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_14 - 14 )

main (int argc, const char * * argv)
{
  double * array;
  void * retval;
  long int t;
  double * array;
  long int t;
  int rc;
  union pthread_attr_t attr;
  pthread_t threads[3];
  int D.12033;
  double D.12032;
  double * D.12031;
  long unsigned int D.12030;
  pthread_t * D.12027;
  double * array.0;
  int D.12025;
  int _4;
  pthread_t * _6;
  long unsigned int _10;
  double * _13;
  double _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  pthread_attr_init (&attr);
  pthread_attr_setdetachstate (&attr, 0);
  t_3 = 0;
  goto <bb 6>;
;;    succ:       6

;;   basic block 3, loop depth 0
;;    pred:       6
  _4 = (int) t_1;
  thread_data_array[t_1].thread_id = _4;
  thread_data_array[t_1].tol = 1.00000000000000002081668171172168513294309377670288085938e-3;
  array.0_5 = create1DArray (10);
  array = array.0_5;
  printf ("In main, creating thread %ld\n", t_1);
  _6 = &threads[t_1];
  rc_7 = pthread_create (_6, &attr, sorRow, &array);
  if (rc_7 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  __builtin_puts (&"Error"[0]);
  exit (-1);
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  array ={v} {CLOBBER};
  t_8 = t_1 + 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       2
;;                5
  # t_1 = PHI <t_3(2), t_8(5)>
  if (t_1 <= 2)
    goto <bb 3>;
  else
    goto <bb 7>;
;;    succ:       3
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  t_9 = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 8, loop depth 0
;;    pred:       9
  _10 = threads[t_2];
  rc_11 = pthread_join (_10, &retval);
  array_12 = retval;
  _13 = array_12 + 16;
  _14 = *_13;
  printf ("In main, returned %f\n", _14);
  retval ={v} {CLOBBER};
  t_15 = t_2 + 1;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # t_2 = PHI <t_9(7), t_15(8)>
  if (t_2 <= 2)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 10, loop depth 0
;;    pred:       9
  pthread_exit (0B);
;;    succ:      

}


Partition 5: size 56 align 16
	attr
Partition 4: size 24 align 16
	threads
Partition 3: size 8 align 8
	array_12
Partition 1: size 8 align 8
	t_2
Partition 0: size 8 align 8
	t_1
Partition 7: size 8 align 8
	retval	array
Partition 2: size 4 align 4
	rc_7

;; Generating RTL for gimple basic block 2

;; pthread_attr_init (&attr);

(insn 8 7 9 (parallel [
            (set (reg:DI 66)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:30 -1
     (nil))

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 66)) thread2.c:30 -1
     (nil))

(call_insn 10 9 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_init") [flags 0x41]  <function_decl 0x7ff8f8272200 pthread_attr_init>) [0 pthread_attr_init S1 A8])
            (const_int 0 [0]))) thread2.c:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; pthread_attr_setdetachstate (&attr, 0);

(insn 11 10 12 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:31 -1
     (nil))

(insn 12 11 13 (set (reg:SI 4 si)
        (const_int 0 [0])) thread2.c:31 -1
     (nil))

(insn 13 12 14 (set (reg:DI 5 di)
        (reg:DI 67)) thread2.c:31 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_setdetachstate") [flags 0x41]  <function_decl 0x7ff8f8272500 pthread_attr_setdetachstate>) [0 pthread_attr_setdetachstate S1 A8])
            (const_int 0 [0]))) thread2.c:31 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))

;; t_3 = 0;

(insn 15 14 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:32 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = (int) t_1;

(insn 19 18 20 (set (reg:DI 68)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 -1
     (nil))

(insn 20 19 0 (set (reg:SI 59 [ D.12051 ])
        (subreg:SI (reg:DI 68) 0)) thread2.c:34 -1
     (nil))

;; thread_data_array[t_1].thread_id = _4;

(insn 21 20 22 (set (reg:DI 69)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 -1
     (nil))

(insn 22 21 23 (set (reg:DI 70)
        (reg:DI 69)) thread2.c:34 -1
     (nil))

(insn 23 22 24 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))

(insn 24 23 25 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69)
            (const_int 3 [0x3]))
        (nil)))

(insn 25 24 26 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))

(insn 26 25 27 (set (reg:DI 70)
        (reg:DI 71)) thread2.c:34 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69)
            (const_int 24 [0x18]))
        (nil)))

(insn 27 26 28 (parallel [
            (set (reg/f:DI 72)
                (plus:DI (reg:DI 70)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))

(insn 28 27 0 (set (mem/j:SI (reg/f:DI 72) [0 thread_data_array[t_1].thread_id+0 S4 A64])
        (reg:SI 59 [ D.12051 ])) thread2.c:34 -1
     (nil))

;; thread_data_array[t_1].tol = 1.00000000000000002081668171172168513294309377670288085938e-3;

(insn 29 28 30 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:35 -1
     (nil))

(insn 30 29 31 (set (reg:DI 74)
        (reg:DI 73)) thread2.c:35 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 74)
                (ashift:DI (reg:DI 74)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))

(insn 32 31 33 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg:DI 74)
                    (reg:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73)
            (const_int 3 [0x3]))
        (nil)))

(insn 33 32 34 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 74)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))

(insn 34 33 35 (set (reg:DI 74)
        (reg:DI 75)) thread2.c:35 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73)
            (const_int 24 [0x18]))
        (nil)))

(insn 35 34 36 (parallel [
            (set (reg/f:DI 76)
                (plus:DI (reg:DI 74)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))

(insn 36 35 37 (set (reg:DF 77)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) thread2.c:35 -1
     (nil))

(insn 37 36 0 (set (mem/j:DF (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 thread_data_array[t_1].tol+0 S8 A64])
        (reg:DF 77)) thread2.c:35 -1
     (nil))

;; array.0_5 = create1DArray (10);

(insn 38 37 39 (set (reg:SI 5 di)
        (const_int 10 [0xa])) thread2.c:36 -1
     (nil))

(call_insn 39 38 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("create1DArray") [flags 0x3]  <function_decl 0x7ff8f7e90700 create1DArray>) [0 create1DArray S1 A8])
            (const_int 0 [0]))) thread2.c:36 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(insn 40 39 0 (set (reg/f:DI 60 [ array.0 ])
        (reg:DI 0 ax)) thread2.c:36 -1
     (nil))

;; array = array.0_5;

(insn 41 40 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 array+0 S8 A64])
        (reg/f:DI 60 [ array.0 ])) thread2.c:36 -1
     (nil))

;; printf ("In main, creating thread %ld\n", t_1);

(insn 42 41 43 (set (reg:DI 78)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:38 -1
     (nil))

(insn 43 42 44 (set (reg:DI 4 si)
        (reg:DI 78)) thread2.c:38 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ff8f7ebd130 *.LC2>)) thread2.c:38 -1
     (nil))

(insn 45 44 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) thread2.c:38 -1
     (nil))

(call_insn 46 45 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:38 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))

;; _6 = &threads[t_1];

(insn 47 46 48 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))

(insn 48 47 49 (set (reg:DI 81)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:39 -1
     (nil))

(insn 49 48 50 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 81)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 50 49 0 (parallel [
            (set (reg/f:DI 61 [ D.12052 ])
                (plus:DI (reg:DI 79)
                    (reg:DI 80)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))

;; rc_7 = pthread_create (_6, &attr, sorRow, &array);

(insn 51 50 52 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))

(insn 52 51 53 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))

(insn 53 52 54 (set (reg:DI 2 cx)
        (reg:DI 82)) thread2.c:39 -1
     (nil))

(insn 54 53 55 (set (reg:DI 1 dx)
        (symbol_ref:DI ("sorRow") [flags 0x3]  <function_decl 0x7ff8f7e90800 sorRow>)) thread2.c:39 -1
     (nil))

(insn 55 54 56 (set (reg:DI 4 si)
        (reg:DI 83)) thread2.c:39 -1
     (nil))

(insn 56 55 57 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.12052 ])) thread2.c:39 -1
     (nil))

(call_insn 57 56 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7ff8f8260c00 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) thread2.c:39 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))

(insn 58 57 59 (set (reg:SI 84)
        (reg:SI 0 ax)) thread2.c:39 -1
     (nil))

(insn 59 58 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 84)) thread2.c:39 -1
     (nil))

;; if (rc_7 != 0)

(insn 60 59 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) thread2.c:40 -1
     (nil))

(jump_insn 61 60 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) thread2.c:40 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; __builtin_puts (&"Error"[0]);

(insn 63 62 64 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ff8f7ebd1c8 *.LC3>)) thread2.c:41 -1
     (nil))

(call_insn 64 63 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff8f819fd00 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) thread2.c:41 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

;; exit (-1);

(insn 65 64 66 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) thread2.c:42 -1
     (nil))

(call_insn 66 65 67 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ff8f81b3900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) thread2.c:42 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))

(barrier 67 66 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 68 67 69 14 "" [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; array ={v} {CLOBBER};

(nil)

;; t_8 = t_1 + 1;

(insn 70 69 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:32 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 71 70 72 13 "" [0 uses])

(note 72 71 0 NOTE_INSN_BASIC_BLOCK)

;; if (t_1 <= 2)

(insn 74 72 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:32 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) thread2.c:32 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; t_9 = 0;

(insn 77 76 0 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:45 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _10 = threads[t_2];

(insn 81 80 82 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])) thread2.c:48 -1
     (nil))

(insn 82 81 0 (set (reg:DI 62 [ D.12053 ])
        (mem/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 85)
                        (const_int 8 [0x8]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -96 [0xffffffffffffffa0])) [0 threads S8 A64])) thread2.c:48 -1
     (nil))

;; rc_11 = pthread_join (_10, &retval);

(insn 83 82 84 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:48 -1
     (nil))

(insn 84 83 85 (set (reg:DI 4 si)
        (reg:DI 86)) thread2.c:48 -1
     (nil))

(insn 85 84 86 (set (reg:DI 5 di)
        (reg:DI 62 [ D.12053 ])) thread2.c:48 -1
     (nil))

(call_insn 86 85 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7ff8f8260e00 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) thread2.c:48 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))

(insn 87 86 88 (set (reg:SI 87)
        (reg:SI 0 ax)) thread2.c:48 -1
     (nil))

(insn 88 87 0 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 87)) thread2.c:48 -1
     (nil))

;; array_12 = retval;

(insn 89 88 90 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 retval+0 S8 A64])) thread2.c:49 -1
     (nil))

(insn 90 89 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
        (reg/f:DI 88)) thread2.c:49 -1
     (nil))

;; _13 = array_12 + 16;

(insn 91 90 92 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])) thread2.c:50 -1
     (nil))

(insn 92 91 0 (parallel [
            (set (reg/f:DI 63 [ D.12054 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:50 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; _14 = *_13;

(insn 93 92 0 (set (reg:DF 64 [ D.12055 ])
        (mem:DF (reg/f:DI 63 [ D.12054 ]) [0 *_13+0 S8 A64])) thread2.c:50 -1
     (nil))

;; printf ("In main, returned %f\n", _14);

(insn 94 93 95 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12055 ])) thread2.c:50 -1
     (nil))

(insn 95 94 96 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ff8f7ebd260 *.LC4>)) thread2.c:50 -1
     (nil))

(insn 96 95 97 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:50 -1
     (nil))

(call_insn 97 96 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:50 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))

;; retval ={v} {CLOBBER};

(nil)

;; t_15 = t_2 + 1;

(insn 98 97 0 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:45 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 99 98 100 16 "" [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; if (t_2 <= 2)

(insn 102 100 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:45 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) thread2.c:45 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; pthread_exit (0B);

(insn 105 104 106 (set (reg:DI 5 di)
        (const_int 0 [0])) thread2.c:52 -1
     (nil))

(call_insn 106 105 107 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:52 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))

(barrier 107 106 0)
deleting block 15
deleting block 14
deleting block 13
deleting block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) thread2.c:25 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) thread2.c:25 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12057+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:25 -1
     (nil))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 66)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:30 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 66)) thread2.c:30 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_init") [flags 0x41]  <function_decl 0x7ff8f8272200 pthread_attr_init>) [0 pthread_attr_init S1 A8])
            (const_int 0 [0]))) thread2.c:30 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:31 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 0 [0])) thread2.c:31 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 67)) thread2.c:31 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_setdetachstate") [flags 0x41]  <function_decl 0x7ff8f8272500 pthread_attr_setdetachstate>) [0 pthread_attr_setdetachstate S1 A8])
            (const_int 0 [0]))) thread2.c:31 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:32 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (label_ref 71)) thread2.c:32 -1
     (nil)
 -> 71)
;;  succ:       7

(barrier 17 16 73)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 73 17 18 4 15 "" [1 uses])
(note 18 73 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 68)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 59 [ D.12051 ])
        (subreg:SI (reg:DI 68) 0)) thread2.c:34 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 69)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 70)
        (reg:DI 69)) thread2.c:34 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69)
            (const_int 3 [0x3]))
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 70)
        (reg:DI 71)) thread2.c:34 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 69)
            (const_int 24 [0x18]))
        (nil)))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 72)
                (plus:DI (reg:DI 70)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 -1
     (nil))
(insn 28 27 29 4 (set (mem/j:SI (reg/f:DI 72) [0 thread_data_array[t_1].thread_id+0 S4 A64])
        (reg:SI 59 [ D.12051 ])) thread2.c:34 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:35 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 74)
        (reg:DI 73)) thread2.c:35 -1
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 74)
                (ashift:DI (reg:DI 74)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))
(insn 32 31 33 4 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg:DI 74)
                    (reg:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73)
            (const_int 3 [0x3]))
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 74)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 74)
        (reg:DI 75)) thread2.c:35 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 73)
            (const_int 24 [0x18]))
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg/f:DI 76)
                (plus:DI (reg:DI 74)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 -1
     (nil))
(insn 36 35 37 4 (set (reg:DF 77)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) thread2.c:35 -1
     (nil))
(insn 37 36 38 4 (set (mem/j:DF (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 thread_data_array[t_1].tol+0 S8 A64])
        (reg:DF 77)) thread2.c:35 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 5 di)
        (const_int 10 [0xa])) thread2.c:36 -1
     (nil))
(call_insn 39 38 40 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("create1DArray") [flags 0x3]  <function_decl 0x7ff8f7e90700 create1DArray>) [0 create1DArray S1 A8])
            (const_int 0 [0]))) thread2.c:36 -1
     (nil)
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 60 [ array.0 ])
        (reg:DI 0 ax)) thread2.c:36 -1
     (nil))
(insn 41 40 42 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 array+0 S8 A64])
        (reg/f:DI 60 [ array.0 ])) thread2.c:36 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 78)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:38 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 4 si)
        (reg:DI 78)) thread2.c:38 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ff8f7ebd130 *.LC2>)) thread2.c:38 -1
     (nil))
(insn 45 44 46 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) thread2.c:38 -1
     (nil))
(call_insn 46 45 47 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:38 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))
(insn 48 47 49 4 (set (reg:DI 81)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:39 -1
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 81)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 61 [ D.12052 ])
                (plus:DI (reg:DI 79)
                    (reg:DI 80)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))
(insn 51 50 52 4 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 -1
     (nil))
(insn 53 52 54 4 (set (reg:DI 2 cx)
        (reg:DI 82)) thread2.c:39 -1
     (nil))
(insn 54 53 55 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("sorRow") [flags 0x3]  <function_decl 0x7ff8f7e90800 sorRow>)) thread2.c:39 -1
     (nil))
(insn 55 54 56 4 (set (reg:DI 4 si)
        (reg:DI 83)) thread2.c:39 -1
     (nil))
(insn 56 55 57 4 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.12052 ])) thread2.c:39 -1
     (nil))
(call_insn 57 56 58 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7ff8f8260c00 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) thread2.c:39 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 58 57 59 4 (set (reg:SI 84)
        (reg:SI 0 ax)) thread2.c:39 -1
     (nil))
(insn 59 58 60 4 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 84)) thread2.c:39 -1
     (nil))
(insn 60 59 61 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) thread2.c:40 -1
     (nil))
(jump_insn 61 60 62 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) thread2.c:40 -1
     (nil)
 -> 68)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 62 61 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ff8f7ebd1c8 *.LC3>)) thread2.c:41 -1
     (nil))
(call_insn 64 63 65 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff8f819fd00 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) thread2.c:41 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 5 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) thread2.c:42 -1
     (nil))
(call_insn 66 65 67 5 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ff8f81b3900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) thread2.c:42 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 67 66 68)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 68 67 69 6 14 "" [1 uses])
(note 69 68 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 6 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:32 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              6 (FALLTHRU,DFS_BACK)
(code_label 71 70 72 7 13 "" [1 uses])
(note 72 71 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 72 75 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:32 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) thread2.c:32 -1
     (nil)
 -> 73)
;;  succ:       4
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:45 -1
     (nil))
(jump_insn 78 77 79 8 (set (pc)
        (label_ref 99)) thread2.c:45 -1
     (nil)
 -> 99)
;;  succ:       10

(barrier 79 78 101)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 101 79 80 9 17 "" [1 uses])
(note 80 101 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])) thread2.c:48 -1
     (nil))
(insn 82 81 83 9 (set (reg:DI 62 [ D.12053 ])
        (mem/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 85)
                        (const_int 8 [0x8]))
                    (reg/f:DI 54 virtual-stack-vars))
                (const_int -96 [0xffffffffffffffa0])) [0 threads S8 A64])) thread2.c:48 -1
     (nil))
(insn 83 82 84 9 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:48 -1
     (nil))
(insn 84 83 85 9 (set (reg:DI 4 si)
        (reg:DI 86)) thread2.c:48 -1
     (nil))
(insn 85 84 86 9 (set (reg:DI 5 di)
        (reg:DI 62 [ D.12053 ])) thread2.c:48 -1
     (nil))
(call_insn 86 85 87 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7ff8f8260e00 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) thread2.c:48 -1
     (nil)
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 9 (set (reg:SI 87)
        (reg:SI 0 ax)) thread2.c:48 -1
     (nil))
(insn 88 87 89 9 (set (mem/c:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 87)) thread2.c:48 -1
     (nil))
(insn 89 88 90 9 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [0 retval+0 S8 A64])) thread2.c:49 -1
     (nil))
(insn 90 89 91 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
        (reg/f:DI 88)) thread2.c:49 -1
     (nil))
(insn 91 90 92 9 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])) thread2.c:50 -1
     (nil))
(insn 92 91 93 9 (parallel [
            (set (reg/f:DI 63 [ D.12054 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:50 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 93 92 94 9 (set (reg:DF 64 [ D.12055 ])
        (mem:DF (reg/f:DI 63 [ D.12054 ]) [0 *_13+0 S8 A64])) thread2.c:50 -1
     (nil))
(insn 94 93 95 9 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12055 ])) thread2.c:50 -1
     (nil))
(insn 95 94 96 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ff8f7ebd260 *.LC4>)) thread2.c:50 -1
     (nil))
(insn 96 95 97 9 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:50 -1
     (nil))
(call_insn 97 96 98 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:50 -1
     (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 98 97 99 9 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:45 -1
     (nil))
;;  succ:       10 (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU,DFS_BACK)
(code_label 99 98 100 10 16 "" [1 uses])
(note 100 99 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 100 103 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:45 -1
     (nil))
(jump_insn 103 102 104 10 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) thread2.c:45 -1
     (nil)
 -> 101)
;;  succ:       9
;;              11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 11 (set (reg:DI 5 di)
        (const_int 0 [0])) thread2.c:52 -1
     (nil))
(call_insn 106 105 107 11 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:52 -1
     (expr_list:REG_NORETURN (const_int 0 [0])
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 107 106 0)


;; Function length (length, funcdef_no=0, decl_uid=11956, cgraph_uid=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 16(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r60): [3..4]
 a1(r59): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r60): [0..1]
 a1(r59): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r59  l0     0    0:r60  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


length

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r59={1d,1u} r60={1d,1u} 
;;    total ref usage 35{22d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) backgroundfunctions.h:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ array ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 59 [ D.12040 ])
        (const_int 1 [0x1])) backgroundfunctions.h:13 89 {*movsi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:SI 60 [ <retval> ])
        (reg:SI 59 [ D.12040 ])) backgroundfunctions.h:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 59 [ D.12040 ])
        (nil)))
(insn 13 9 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 60 [ <retval> ])) backgroundfunctions.h:14 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 60 [ <retval> ])
        (nil)))
(insn 16 13 0 2 (use (reg/i:SI 0 ax)) backgroundfunctions.h:14 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function create2DArray (create2DArray, funcdef_no=1, decl_uid=11960, cgraph_uid=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r74,l0) best AREG, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r70,l0) best AREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r68,l0) best AREG, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r65: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r65,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r64,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r62,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r68,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r74,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r65,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a7(r64,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a8(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a11(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a13(r70,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a14(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a15(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 49(l0): point = 0
   Insn 46(l0): point = 2
   Insn 42(l0): point = 4
   Insn 39(l0): point = 6
   Insn 31(l0): point = 9
   Insn 30(l0): point = 11
   Insn 29(l0): point = 13
   Insn 28(l0): point = 15
   Insn 27(l0): point = 17
   Insn 26(l0): point = 19
   Insn 25(l0): point = 21
   Insn 24(l0): point = 23
   Insn 23(l0): point = 25
   Insn 22(l0): point = 27
   Insn 21(l0): point = 29
   Insn 20(l0): point = 31
   Insn 19(l0): point = 33
   Insn 18(l0): point = 35
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 52(l0): point = 45
   Insn 14(l0): point = 47
   Insn 13(l0): point = 49
   Insn 12(l0): point = 51
   Insn 11(l0): point = 53
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 8(l0): point = 59
   Insn 7(l0): point = 61
   Insn 3(l0): point = 63
   Insn 2(l0): point = 65
 a0(r68): [3..4]
 a1(r67): [5..6]
 a2(r75): [41..42]
 a3(r63): [12..27]
 a4(r66): [12..13]
 a5(r74): [14..15]
 a6(r65): [20..21]
 a7(r64): [22..23]
 a8(r73): [24..25]
 a9(r72): [28..29]
 a10(r62): [28..31]
 a11(r61): [32..33]
 a12(r71): [34..35]
 a13(r70): [50..51]
 a14(r60): [56..57]
 a15(r59): [58..59]
 a16(r69): [60..61]
Compressing live ranges: from 68 to 30 - 44%
Ranges after the compression:
 a0(r68): [0..1]
 a1(r67): [2..3]
 a2(r75): [20..21]
 a3(r63): [4..13]
 a4(r66): [4..5]
 a5(r74): [6..7]
 a6(r65): [8..9]
 a7(r64): [10..11]
 a8(r73): [12..13]
 a9(r72): [14..15]
 a10(r62): [14..15]
 a11(r61): [16..17]
 a12(r71): [18..19]
 a13(r70): [22..23]
 a14(r60): [24..25]
 a15(r59): [26..27]
 a16(r69): [28..29]
  regions=1, blocks=6, points=30
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   15:r59  l0     0   14:r60  l0     0   11:r61  l0     0   10:r62  l0     1
    3:r63  l0     3    7:r64  l0     0    6:r65  l0     0    4:r66  l0     0
    1:r67  l0     0    0:r68  l0     0   16:r69  l0     0   13:r70  l0     0
   12:r71  l0     0    9:r72  l0     0    8:r73  l0     0    5:r74  l0     0
    2:r75  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


create2DArray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={8d,1u} r18={2d} r19={2d} r20={1d,18u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u,1e} r63={1d,1u} r64={1d,1u} r65={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} r71={1d,1u} r72={1d,1u} r73={1d,1u} r74={1d,1u} r75={1d,1u} 
;;    total ref usage 195{133d,60u,2e} in 32{30 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 69 70
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32])
        (reg:SI 5 di [ rows ])) backgroundfunctions.h:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ rows ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 columns+0 S4 A32])
        (reg:SI 4 si [ columns ])) backgroundfunctions.h:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ columns ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 69)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32])) backgroundfunctions.h:27 89 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 59 [ D.12041 ])
        (sign_extend:DI (reg:SI 69))) backgroundfunctions.h:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 69)
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 60 [ D.12041 ])
                (ashift:DI (reg:DI 59 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:27 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.12041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12041 ])) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.12041 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:27 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 70)
        (reg:DI 0 ax)) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 70)
            (nil))))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 70)) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 70)
        (nil)))
(insn 14 13 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) backgroundfunctions.h:28 89 {*movsi_internal}
     (nil))
(jump_insn 52 14 53 2 (set (pc)
        (label_ref 32)) backgroundfunctions.h:28 650 {jump}
     (nil)
 -> 32)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 53 52 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 63 64 65 66 71 72 73 74
(code_label 34 53 17 3 5 "" [1 uses])
(note 17 34 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 71)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:29 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 61 [ D.12041 ])
        (sign_extend:DI (reg:SI 71))) backgroundfunctions.h:29 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 71)
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 62 [ D.12041 ])
                (ashift:DI (reg:DI 61 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 61 [ D.12041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 72)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 63 [ D.12042 ])
                (plus:DI (reg:DI 62 [ D.12041 ])
                    (reg/f:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_DEAD (reg:DI 62 [ D.12041 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
                        (reg:DI 62 [ D.12041 ]))
                    (nil))))))
(insn 23 22 24 3 (set (reg:SI 73)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 columns+0 S4 A32])) backgroundfunctions.h:29 89 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 64 [ D.12041 ])
        (sign_extend:DI (reg:SI 73))) backgroundfunctions.h:29 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 73)
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 65 [ D.12041 ])
                (ashift:DI (reg:DI 64 [ D.12041 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 64 [ D.12041 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 65 [ D.12041 ])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 65 [ D.12041 ])
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:29 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 3 (set (reg/f:DI 74)
        (reg:DI 0 ax)) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 74)
            (nil))))
(insn 29 28 30 3 (set (reg/f:DI 66 [ D.12043 ])
        (reg/f:DI 74)) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 74)
        (nil)))
(insn 30 29 31 3 (set (mem/f:DI (reg/f:DI 63 [ D.12042 ]) [0 *_9+0 S8 A64])
        (reg/f:DI 66 [ D.12043 ])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66 [ D.12043 ])
        (expr_list:REG_DEAD (reg/f:DI 63 [ D.12042 ])
            (nil))))
(insn 31 30 32 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:28 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 75
(code_label 32 31 33 4 4 "" [1 uses])
(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 4 (set (reg:SI 75)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) backgroundfunctions.h:28 89 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 75)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [0 rows+0 S4 A32]))) backgroundfunctions.h:28 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 75)
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) backgroundfunctions.h:28 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 67 68
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 5 (set (reg/f:DI 67 [ D.12042 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:31 87 {*movdi_internal_rex64}
     (nil))
(insn 42 39 46 5 (set (reg:DI 68 [ <retval> ])
        (reg/f:DI 67 [ D.12042 ])) backgroundfunctions.h:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 67 [ D.12042 ])
        (nil)))
(insn 46 42 49 5 (set (reg/i:DI 0 ax)
        (reg:DI 68 [ <retval> ])) backgroundfunctions.h:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 68 [ <retval> ])
        (nil)))
(insn 49 46 0 5 (use (reg/i:DI 0 ax)) backgroundfunctions.h:32 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function create1DArray (create1DArray, funcdef_no=2, decl_uid=11968, cgraph_uid=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r64: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r64,l0) best AREG, allocno GENERAL_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r62,l0) best AREG, allocno GENERAL_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r60,l0) best DIREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r62,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r64,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a3(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a4(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r62): [3..4]
 a1(r61): [5..6]
 a2(r64): [9..10]
 a3(r60): [15..16]
 a4(r59): [17..18]
 a5(r63): [19..20]
Compressing live ranges: from 25 to 12 - 48%
Ranges after the compression:
 a0(r62): [0..1]
 a1(r61): [2..3]
 a2(r64): [4..5]
 a3(r60): [6..7]
 a4(r59): [8..9]
 a5(r63): [10..11]
  regions=1, blocks=3, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r59  l0     0    3:r60  l0     0    1:r61  l0     0    0:r62  l0     0
    5:r63  l0     0    2:r64  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


create1DArray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} 
;;    total ref usage 95{72d,23u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])
        (reg:SI 5 di [ columns ])) backgroundfunctions.h:42 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ columns ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 63)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])) backgroundfunctions.h:44 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 59 [ D.12044 ])
        (sign_extend:DI (reg:SI 63))) backgroundfunctions.h:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 63)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 60 [ D.12044 ])
                (ashift:DI (reg:DI 59 [ D.12044 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.12044 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 60 [ D.12044 ])) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 60 [ D.12044 ])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 64)
        (reg:DI 0 ax)) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 64)
            (nil))))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 64)) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 64)
        (nil)))
(insn 13 12 16 2 (set (reg/f:DI 61 [ D.12045 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:45 87 {*movdi_internal_rex64}
     (nil))
(insn 16 13 20 2 (set (reg:DI 62 [ <retval> ])
        (reg/f:DI 61 [ D.12045 ])) backgroundfunctions.h:45 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.12045 ])
        (nil)))
(insn 20 16 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 62 [ <retval> ])) backgroundfunctions.h:46 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62 [ <retval> ])
        (nil)))
(insn 23 20 0 2 (use (reg/i:DI 0 ax)) backgroundfunctions.h:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sorRow (sorRow, funcdef_no=3, decl_uid=11977, cgraph_uid=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r70: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r70,l0) best DIREG, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r67,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r66: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r66,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r64: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a1 (r64,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r62,l0) best SSE_REGS, allocno SSE_REGS
    r61: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r61,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r60: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r60,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a1(r64,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 Q_REGS:8 NON_Q_REGS:8 INDEX_REGS:8 GENERAL_REGS:8 LEGACY_REGS:8 CLOBBERED_REGS:8 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:-1 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:14
  a2(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a4(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a5(r62,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 Q_REGS:15 NON_Q_REGS:15 INDEX_REGS:15 GENERAL_REGS:15 LEGACY_REGS:15 CLOBBERED_REGS:15 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:14
  a6(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r60,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a8(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a9(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a10(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 33(l0): point = 4
   Insn 32(l0): point = 6
   Insn 31(l0): point = 8
   Insn 30(l0): point = 10
   Insn 29(l0): point = 12
   Insn 28(l0): point = 14
   Insn 27(l0): point = 16
   Insn 26(l0): point = 18
   Insn 19(l0): point = 21
   Insn 18(l0): point = 23
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 15(l0): point = 29
   Insn 14(l0): point = 31
   Insn 13(l0): point = 33
   Insn 12(l0): point = 35
   Insn 24(l0): point = 38
   Insn 23(l0): point = 40
   Insn 44(l0): point = 43
   Insn 8(l0): point = 45
   Insn 7(l0): point = 47
   Insn 6(l0): point = 49
   Insn 2(l0): point = 51
 a0(r70): [3..4]
 a1(r64): [13..14]
 a2(r63): [15..16]
 a3(r69): [17..18]
 a4(r61): [24..27]
 a5(r62): [24..25]
 a6(r68): [28..29]
 a7(r60): [28..31]
 a8(r59): [32..33]
 a9(r67): [34..35]
 a10(r66): [48..49]
Compressing live ranges: from 54 to 18 - 33%
Ranges after the compression:
 a0(r70): [0..1]
 a1(r64): [2..3]
 a2(r63): [4..5]
 a3(r69): [6..7]
 a4(r61): [8..9]
 a5(r62): [8..9]
 a6(r68): [10..11]
 a7(r60): [10..11]
 a8(r59): [12..13]
 a9(r67): [14..15]
 a10(r66): [16..17]
  regions=1, blocks=6, points=18
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    8:r59  l0     0    7:r60  l0     1    4:r61  l0     0    5:r62  l0    21
    2:r63  l0     0    1:r64  l0     0   10:r66  l0     0    9:r67  l0     0
    6:r68  l0     0    3:r69  l0     0    0:r70  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sorRow

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={7d,1u} r18={2d} r19={2d} r20={1d,17u,2e} r21={4d,1u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r59={1d,1u} r60={1d,1u,1e} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,1u} r70={1d,1u} 
;;    total ref usage 181{127d,51u,3e} in 25{23 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])
        (reg:DI 5 di [ threadarg ])) thread2.c:15 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ threadarg ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 66)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])) thread2.c:17 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
        (reg/f:DI 66)) thread2.c:17 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 66)
        (nil)))
(insn 8 7 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) thread2.c:18 89 {*movsi_internal}
     (nil))
(jump_insn 44 8 45 2 (set (pc)
        (label_ref 20)) thread2.c:18 650 {jump}
     (nil)
 -> 20)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 45 44 22)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 67 68
(code_label 22 45 11 3 11 "" [1 uses])
(note 11 22 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 67)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) thread2.c:19 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 59 [ D.12046 ])
        (sign_extend:DI (reg:SI 67))) thread2.c:19 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 67)
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 60 [ D.12046 ])
                (ashift:DI (reg:DI 59 [ D.12046 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 59 [ D.12046 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 3 (set (reg/f:DI 68)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:19 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:DI 61 [ D.12047 ])
                (plus:DI (reg:DI 60 [ D.12046 ])
                    (reg/f:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 68)
        (expr_list:REG_DEAD (reg:DI 60 [ D.12046 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
                        (reg:DI 60 [ D.12046 ]))
                    (nil))))))
(insn 17 16 18 3 (set (reg:DF 62 [ D.12048 ])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) thread2.c:19 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 18 17 19 3 (set (mem:DF (reg/f:DI 61 [ D.12047 ]) [0 *_7+0 S8 A64])
        (reg:DF 62 [ D.12048 ])) thread2.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 62 [ D.12048 ])
        (expr_list:REG_DEAD (reg/f:DI 61 [ D.12047 ])
            (nil))))
(insn 19 18 20 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:18 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 20 19 21 4 10 "" [1 uses])
(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 21 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 9 [0x9]))) thread2.c:18 7 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) thread2.c:18 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 69 70
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 69)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:DI 63 [ D.12047 ])
                (plus:DI (reg/f:DI 69)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:21 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 69)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 28 27 29 5 (set (reg:DF 64 [ D.12048 ])
        (mem:DF (reg/f:DI 63 [ D.12047 ]) [0 *_10+0 S8 A64])) thread2.c:21 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.12047 ])
        (nil)))
(insn 29 28 30 5 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12048 ])) thread2.c:21 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 64 [ D.12048 ])
        (nil)))
(insn 30 29 31 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff8f7eb65f0 *.LC0>)) thread2.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 5 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:21 91 {*movqi_internal}
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:21 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 33 32 34 5 (set (reg:DI 70)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:22 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg:DI 70)) thread2.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 70)
        (nil)))
(call_insn 35 34 36 5 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:22 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 36 35 0)

;; Function main (main, funcdef_no=4, decl_uid=11986, cgraph_uid=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 11 count 11 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 106.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best SIREG, allocno GENERAL_REGS
    r82: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best CREG, allocno GENERAL_REGS
    r81: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r81,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r80: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r80,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r79: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r79,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r78: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r78,l0) best SIREG, allocno GENERAL_REGS
    r77: preferred SSE_REGS, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a18 (r77,l0) best SSE_REGS, allocno INT_SSE_REGS
    r76: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r76,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r75: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r75,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r74: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r74,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r73: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r73,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r72: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r72,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r71: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r71,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r70: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r70,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r69: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r69,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r68: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r68,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r67: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r67,l0) best DIREG, allocno GENERAL_REGS
    r66: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r66,l0) best DIREG, allocno GENERAL_REGS
    r64: preferred SSE_FIRST_REG, alternative INT_SSE_REGS, allocno INT_SSE_REGS
    a0 (r64,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r63: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r63,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r62: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r62,l0) best DIREG, allocno GENERAL_REGS
    r61: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r61,l0) best DIREG, allocno GENERAL_REGS
    r60: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r60,l0) best AREG, allocno GENERAL_REGS
    r59: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r59,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r64,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 Q_REGS:8 NON_Q_REGS:8 INDEX_REGS:8 GENERAL_REGS:8 LEGACY_REGS:8 CLOBBERED_REGS:8 FP_TOP_REG:40 FP_SECOND_REG:40 FLOAT_REGS:40 SSE_FIRST_REG:-1 SSE_REGS:0 FP_TOP_SSE_REGS:40 FP_SECOND_SSE_REGS:40 FLOAT_SSE_REGS:40 FLOAT_INT_REGS:40 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:40 ALL_REGS:131070 MEM:14
  a1(r63,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a4(r87,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a5(r62,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a8(r84,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a9(r61,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a11(r82,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a12(r80,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a13(r79,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a14(r81,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a15(r78,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a16(r60,l0) costs: AREG:-1 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a17(r76,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a18(r77,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 Q_REGS:4 NON_Q_REGS:4 INDEX_REGS:4 GENERAL_REGS:4 LEGACY_REGS:4 CLOBBERED_REGS:4 FP_TOP_REG:38 FP_SECOND_REG:38 FLOAT_REGS:38 SSE_FIRST_REG:0 SSE_REGS:0 FP_TOP_SSE_REGS:38 FP_SECOND_SSE_REGS:38 FLOAT_SSE_REGS:38 FLOAT_INT_REGS:38 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:38 ALL_REGS:131070 MEM:12
  a19(r74,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a20(r75,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a21(r73,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a22(r72,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a23(r59,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:8
  a24(r70,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:104 SSE_REGS:104 MMX_REGS:104 FP_TOP_SSE_REGS:524280 FP_SECOND_SSE_REGS:524280 FLOAT_SSE_REGS:524280 FLOAT_INT_REGS:524280 INT_SSE_REGS:104 FLOAT_INT_SSE_REGS:524280 ALL_REGS:524280 MEM:26
  a25(r71,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:6
  a26(r69,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:39 SSE_REGS:39 MMX_REGS:39 FP_TOP_SSE_REGS:196605 FP_SECOND_SSE_REGS:196605 FLOAT_SSE_REGS:196605 FLOAT_INT_REGS:196605 INT_SSE_REGS:39 FLOAT_INT_SSE_REGS:196605 ALL_REGS:196605 MEM:10
  a27(r68,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 MEM:7
  a28(r67,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7
  a29(r66,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:26 SSE_REGS:26 MMX_REGS:26 FP_TOP_SSE_REGS:131070 FP_SECOND_SSE_REGS:131070 FLOAT_SSE_REGS:131070 FLOAT_INT_REGS:131070 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:131070 ALL_REGS:131070 MEM:7

   Insn 106(l0): point = 0
   Insn 105(l0): point = 2
   Insn 98(l0): point = 5
   Insn 97(l0): point = 7
   Insn 96(l0): point = 9
   Insn 95(l0): point = 11
   Insn 94(l0): point = 13
   Insn 93(l0): point = 15
   Insn 92(l0): point = 17
   Insn 91(l0): point = 19
   Insn 90(l0): point = 21
   Insn 89(l0): point = 23
   Insn 88(l0): point = 25
   Insn 87(l0): point = 27
   Insn 86(l0): point = 29
   Insn 85(l0): point = 31
   Insn 84(l0): point = 33
   Insn 83(l0): point = 35
   Insn 82(l0): point = 37
   Insn 81(l0): point = 39
   Insn 103(l0): point = 42
   Insn 102(l0): point = 44
   Insn 124(l0): point = 47
   Insn 77(l0): point = 49
   Insn 66(l0): point = 52
   Insn 65(l0): point = 54
   Insn 64(l0): point = 56
   Insn 63(l0): point = 58
   Insn 61(l0): point = 61
   Insn 60(l0): point = 63
   Insn 59(l0): point = 65
   Insn 58(l0): point = 67
   Insn 57(l0): point = 69
   Insn 56(l0): point = 71
   Insn 55(l0): point = 73
   Insn 54(l0): point = 75
   Insn 53(l0): point = 77
   Insn 52(l0): point = 79
   Insn 51(l0): point = 81
   Insn 50(l0): point = 83
   Insn 49(l0): point = 85
   Insn 48(l0): point = 87
   Insn 47(l0): point = 89
   Insn 46(l0): point = 91
   Insn 45(l0): point = 93
   Insn 44(l0): point = 95
   Insn 43(l0): point = 97
   Insn 42(l0): point = 99
   Insn 41(l0): point = 101
   Insn 40(l0): point = 103
   Insn 39(l0): point = 105
   Insn 38(l0): point = 107
   Insn 37(l0): point = 109
   Insn 36(l0): point = 111
   Insn 35(l0): point = 113
   Insn 34(l0): point = 115
   Insn 33(l0): point = 117
   Insn 32(l0): point = 119
   Insn 31(l0): point = 121
   Insn 30(l0): point = 123
   Insn 29(l0): point = 125
   Insn 28(l0): point = 127
   Insn 27(l0): point = 129
   Insn 26(l0): point = 131
   Insn 25(l0): point = 133
   Insn 24(l0): point = 135
   Insn 23(l0): point = 137
   Insn 22(l0): point = 139
   Insn 21(l0): point = 141
   Insn 20(l0): point = 143
   Insn 19(l0): point = 145
   Insn 75(l0): point = 148
   Insn 74(l0): point = 150
   Insn 70(l0): point = 153
   Insn 122(l0): point = 156
   Insn 15(l0): point = 158
   Insn 14(l0): point = 160
   Insn 13(l0): point = 162
   Insn 12(l0): point = 164
   Insn 11(l0): point = 166
   Insn 10(l0): point = 168
   Insn 9(l0): point = 170
   Insn 8(l0): point = 172
   Insn 5(l0): point = 174
   Insn 3(l0): point = 176
   Insn 2(l0): point = 178
 a0(r64): [14..15]
 a1(r63): [16..17]
 a2(r89): [18..19]
 a3(r88): [22..23]
 a4(r87): [26..27]
 a5(r62): [32..37]
 a6(r86): [34..35]
 a7(r85): [38..39]
 a8(r84): [66..67]
 a9(r61): [72..83]
 a10(r83): [74..79]
 a11(r82): [78..81]
 a12(r80): [84..85]
 a13(r79): [84..89]
 a14(r81): [86..87]
 a15(r78): [98..99]
 a16(r60): [102..103]
 a17(r76): [110..113]
 a18(r77): [110..111]
 a19(r74): [118..123] [114..115]
 a20(r75): [116..117]
 a21(r73): [120..125]
 a22(r72): [128..129]
 a23(r59): [128..143]
 a24(r70): [134..139] [130..131]
 a25(r71): [132..133]
 a26(r69): [136..141]
 a27(r68): [144..145]
 a28(r67): [163..166]
 a29(r66): [171..172]
Compressing live ranges: from 181 to 48 - 26%
Ranges after the compression:
 a0(r64): [0..1]
 a1(r63): [2..3]
 a2(r89): [4..5]
 a3(r88): [6..7]
 a4(r87): [8..9]
 a5(r62): [10..11]
 a6(r86): [10..11]
 a7(r85): [12..13]
 a8(r84): [14..15]
 a9(r61): [16..17]
 a10(r83): [16..17]
 a11(r82): [16..17]
 a12(r80): [18..19]
 a13(r79): [18..21]
 a14(r81): [20..21]
 a15(r78): [22..23]
 a16(r60): [24..25]
 a17(r76): [26..27]
 a18(r77): [26..27]
 a19(r74): [32..33] [28..29]
 a20(r75): [30..31]
 a21(r73): [32..33]
 a22(r72): [34..35]
 a23(r59): [34..41]
 a24(r70): [40..41] [36..37]
 a25(r71): [38..39]
 a26(r69): [40..41]
 a27(r68): [42..43]
 a28(r67): [44..45]
 a29(r66): [46..47]
  regions=1, blocks=11, points=48
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=32
Disposition:
   23:r59  l0     2   16:r60  l0     0    9:r61  l0     5    5:r62  l0     0
    1:r63  l0     0    0:r64  l0     0   29:r66  l0     0   28:r67  l0     0
   27:r68  l0     0   26:r69  l0     1   24:r70  l0     0   25:r71  l0     0
   22:r72  l0     0   21:r73  l0     1   19:r74  l0     0   20:r75  l0     0
   17:r76  l0     1   18:r77  l0     0   15:r78  l0     0   13:r79  l0     0
   12:r80  l0     1   14:r81  l0     1   11:r82  l0     1   10:r83  l0     0
    8:r84  l0     0    7:r85  l0     0    6:r86  l0     1    4:r87  l0     0
    3:r88  l0     0    2:r89  l0     0
+++Costs: overall -12, reg -12, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={13d,6u} r1={12d,1u} r2={12d,1u} r4={15d,5u} r5={21d,11u} r6={1d,10u} r7={1d,20u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,9u} r17={33d,3u} r18={10d} r19={10d} r20={1d,41u,2e} r21={12d,1u} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r59={1d,1u} r60={1d,1u} r61={1d,1u} r62={1d,1u} r63={1d,1u} r64={1d,1u} r66={1d,1u} r67={1d,1u} r68={1d,1u} r69={1d,2u,1e} r70={4d,4u} r71={1d,1u} r72={1d,1u} r73={1d,2u,1e} r74={4d,4u} r75={1d,1u} r76={1d,1u} r77={1d,1u} r78={1d,1u} r79={1d,1u} r80={1d,1u} r81={1d,1u} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 687{537d,146u,4e} in 86{76 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -148 [0xffffffffffffff6c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) thread2.c:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) thread2.c:25 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12057+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:25 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 66)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:30 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 66)) thread2.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 66)
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_init") [flags 0x41]  <function_decl 0x7ff8f8272200 pthread_attr_init>) [0 pthread_attr_init S1 A8])
            (const_int 0 [0]))) thread2.c:30 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 67)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:31 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 0 [0])) thread2.c:31 89 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 67)) thread2.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 67)
        (nil)))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_setdetachstate") [flags 0x41]  <function_decl 0x7ff8f8272500 pthread_attr_setdetachstate>) [0 pthread_attr_setdetachstate S1 A8])
            (const_int 0 [0]))) thread2.c:31 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 15 14 122 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:32 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 122 15 123 2 (set (pc)
        (label_ref 71)) thread2.c:32 650 {jump}
     (nil)
 -> 71)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 123 122 73)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
(code_label 73 123 18 3 15 "" [1 uses])
(note 18 73 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:DI 68)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 3 (set (reg:SI 59 [ D.12051 ])
        (subreg:SI (reg:DI 68) 0)) thread2.c:34 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 68)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 69)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (set (reg:DI 70)
        (reg:DI 69)) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:DI 70)
                (ashift:DI (reg:DI 70)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 3 (parallel [
            (set (reg:DI 70)
                (plus:DI (reg:DI 70)
                    (reg:DI 69)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 69)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 69)
                    (const_int 3 [0x3]))
                (nil)))))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 71)
                (ashift:DI (reg:DI 70)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 70)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (set (reg:DI 70)
        (reg:DI 71)) thread2.c:34 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 71)
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg/f:DI 72)
                (plus:DI (reg:DI 70)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 70)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 3 (set (mem/j:SI (reg/f:DI 72) [0 thread_data_array[t_1].thread_id+0 S4 A64])
        (reg:SI 59 [ D.12051 ])) thread2.c:34 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 72)
        (expr_list:REG_DEAD (reg:SI 59 [ D.12051 ])
            (nil))))
(insn 29 28 30 3 (set (reg:DI 73)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (reg:DI 74)
        (reg:DI 73)) thread2.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (reg:DI 74)
                (ashift:DI (reg:DI 74)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 513 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 3 (parallel [
            (set (reg:DI 74)
                (plus:DI (reg:DI 74)
                    (reg:DI 73)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 73)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 73)
                    (const_int 3 [0x3]))
                (nil)))))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 75)
                (ashift:DI (reg:DI 74)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 74)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 34 33 35 3 (set (reg:DI 74)
        (reg:DI 75)) thread2.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 75)
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg/f:DI 76)
                (plus:DI (reg:DI 74)
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 74)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 3 (set (reg:DF 77)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) thread2.c:35 133 {*movdf_internal_rex64}
     (nil))
(insn 37 36 38 3 (set (mem/j:DF (plus:DI (reg/f:DI 76)
                (const_int 8 [0x8])) [0 thread_data_array[t_1].tol+0 S8 A64])
        (reg:DF 77)) thread2.c:35 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 77)
        (expr_list:REG_DEAD (reg/f:DI 76)
            (nil))))
(insn 38 37 39 3 (set (reg:SI 5 di)
        (const_int 10 [0xa])) thread2.c:36 89 {*movsi_internal}
     (nil))
(call_insn 39 38 40 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("create1DArray") [flags 0x3]  <function_decl 0x7ff8f7e90700 create1DArray>) [0 create1DArray S1 A8])
            (const_int 0 [0]))) thread2.c:36 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 40 39 41 3 (set (reg/f:DI 60 [ array.0 ])
        (reg:DI 0 ax)) thread2.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 41 40 42 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 array+0 S8 A64])
        (reg/f:DI 60 [ array.0 ])) thread2.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 60 [ array.0 ])
        (nil)))
(insn 42 41 43 3 (set (reg:DI 78)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 3 (set (reg:DI 4 si)
        (reg:DI 78)) thread2.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 78)
        (nil)))
(insn 44 43 45 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ff8f7ebd130 *.LC2>)) thread2.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) thread2.c:38 91 {*movqi_internal}
     (nil))
(call_insn 46 45 47 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:38 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 79)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 3 (set (reg:DI 81)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:39 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 3 (parallel [
            (set (reg:DI 80)
                (ashift:DI (reg:DI 81)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 81)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 50 49 51 3 (parallel [
            (set (reg/f:DI 61 [ D.12052 ])
                (plus:DI (reg:DI 79)
                    (reg:DI 80)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 80)
        (expr_list:REG_DEAD (reg:DI 79)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 82)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 52 51 53 3 (parallel [
            (set (reg:DI 83)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 3 (set (reg:DI 2 cx)
        (reg:DI 82)) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 82)
        (nil)))
(insn 54 53 55 3 (set (reg:DI 1 dx)
        (symbol_ref:DI ("sorRow") [flags 0x3]  <function_decl 0x7ff8f7e90800 sorRow>)) thread2.c:39 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (set (reg:DI 4 si)
        (reg:DI 83)) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(insn 56 55 57 3 (set (reg:DI 5 di)
        (reg/f:DI 61 [ D.12052 ])) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 61 [ D.12052 ])
        (nil)))
(call_insn 57 56 58 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7ff8f8260c00 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) thread2.c:39 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 58 57 59 3 (set (reg:SI 84)
        (reg:SI 0 ax)) thread2.c:39 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 59 58 60 3 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 84)) thread2.c:39 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 60 59 61 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) thread2.c:40 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 61 60 62 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) thread2.c:40 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 68)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 62 61 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ff8f7ebd1c8 *.LC3>)) thread2.c:41 87 {*movdi_internal_rex64}
     (nil))
(call_insn 64 63 65 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff8f819fd00 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) thread2.c:41 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 4 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) thread2.c:42 89 {*movsi_internal}
     (nil))
(call_insn 66 65 67 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ff8f81b3900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) thread2.c:42 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 68)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 68 67 69 5 14 "" [1 uses])
(note 69 68 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 5 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:32 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 70 72 6 13 "" [1 uses])
(note 72 71 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 74 72 75 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:32 8 {*cmpdi_1}
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) thread2.c:32 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 73)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 124 7 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:45 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 124 77 125 7 (set (pc)
        (label_ref 99)) thread2.c:45 650 {jump}
     (nil)
 -> 99)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 125 124 101)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 85 86 87 88 89
(code_label 101 125 80 8 17 "" [1 uses])
(note 80 101 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 8 (set (reg:DI 85)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])) thread2.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 8 (set (reg:DI 62 [ D.12053 ])
        (mem/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 85)
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -96 [0xffffffffffffffa0])) [0 threads S8 A64])) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 83 82 84 8 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:48 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 8 (set (reg:DI 4 si)
        (reg:DI 86)) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(insn 85 84 86 8 (set (reg:DI 5 di)
        (reg:DI 62 [ D.12053 ])) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 62 [ D.12053 ])
        (nil)))
(call_insn 86 85 87 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7ff8f8260e00 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) thread2.c:48 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 8 (set (reg:SI 87)
        (reg:SI 0 ax)) thread2.c:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 88 87 89 8 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 87)) thread2.c:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 89 88 90 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [0 retval+0 S8 A64])) thread2.c:49 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
        (reg/f:DI 88)) thread2.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 91 90 92 8 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])) thread2.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 92 91 93 8 (parallel [
            (set (reg/f:DI 63 [ D.12054 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:50 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 93 92 94 8 (set (reg:DF 64 [ D.12055 ])
        (mem:DF (reg/f:DI 63 [ D.12054 ]) [0 *_13+0 S8 A64])) thread2.c:50 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 63 [ D.12054 ])
        (nil)))
(insn 94 93 95 8 (set (reg:DF 21 xmm0)
        (reg:DF 64 [ D.12055 ])) thread2.c:50 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 64 [ D.12055 ])
        (nil)))
(insn 95 94 96 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ff8f7ebd260 *.LC4>)) thread2.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 8 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:50 91 {*movqi_internal}
     (nil))
(call_insn 97 96 98 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:50 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 98 97 99 8 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:45 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 99 98 100 9 16 "" [1 uses])
(note 100 99 102 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 102 100 103 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:45 8 {*cmpdi_1}
     (nil))
(jump_insn 103 102 104 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) thread2.c:45 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 101)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 104 103 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 10 (set (reg:DI 5 di)
        (const_int 0 [0])) thread2.c:52 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 10 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:52 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 107 106 0)


;; Function length (length, funcdef_no=0, decl_uid=11956, cgraph_uid=0)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 6
changing reg in insn 9
changing reg in insn 9
changing reg in insn 13
starting the processing of deferred insns
ending the processing of deferred insns


length

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={4d,4u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,3u} r7={1d,2u} r20={1d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 32{21d,11u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 59 60
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) backgroundfunctions.h:12 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ array ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:SI 0 ax [orig:59 D.12040 ] [59])
        (const_int 1 [0x1])) backgroundfunctions.h:13 89 {*movsi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:SI 0 ax [orig:60 <retval> ] [60])
        (reg:SI 0 ax [orig:59 D.12040 ] [59])) backgroundfunctions.h:13 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:59 D.12040 ] [59])
        (nil)))
(insn 13 9 16 2 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:60 <retval> ] [60])) backgroundfunctions.h:14 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:60 <retval> ] [60])
        (nil)))
(insn 16 13 0 2 (use (reg/i:SI 0 ax)) backgroundfunctions.h:14 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function create2DArray (create2DArray, funcdef_no=1, decl_uid=11960, cgraph_uid=1)


********** Local #1: **********

New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 31:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rm {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rem {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 22
changing reg in insn 22
changing reg in insn 22
changing reg in insn 30
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
changing reg in insn 29
changing reg in insn 30
changing reg in insn 39
changing reg in insn 42
changing reg in insn 42
changing reg in insn 46
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 18
changing reg in insn 19
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 29
changing reg in insn 35
changing reg in insn 36
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 27.


create2DArray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={19d,19u} r1={4d,1u,1e} r2={3d} r3={1d,1u} r4={3d,1u} r5={5d,3u} r6={1d,18u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={8d,1u} r18={2d} r19={2d} r20={1d,1u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 186{132d,52u,2e} in 32{30 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 69 70
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 rows+0 S4 A32])
        (reg:SI 5 di [ rows ])) backgroundfunctions.h:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ rows ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 columns+0 S4 A32])
        (reg:SI 4 si [ columns ])) backgroundfunctions.h:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ columns ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 0 ax [69])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [0 rows+0 S4 A32])) backgroundfunctions.h:27 89 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 0 ax [orig:59 D.12041 ] [59])
        (sign_extend:DI (reg:SI 0 ax [69]))) backgroundfunctions.h:27 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [69])
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 0 ax [orig:60 D.12041 ] [60])
                (ashift:DI (reg:DI 0 ax [orig:59 D.12041 ] [59])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:27 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.12041 ] [59])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:60 D.12041 ] [60])) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.12041 ] [60])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:27 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [70])
        (reg:DI 0 ax)) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [70])
            (nil))))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])
        (reg/f:DI 0 ax [70])) backgroundfunctions.h:27 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [70])
        (nil)))
(insn 14 13 52 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
        (const_int 0 [0])) backgroundfunctions.h:28 89 {*movsi_internal}
     (nil))
(jump_insn 52 14 53 2 (set (pc)
        (label_ref 32)) backgroundfunctions.h:28 650 {jump}
     (nil)
 -> 32)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 53 52 34)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 61 62 63 64 65 66 71 72 73 74
(code_label 34 53 17 3 5 "" [1 uses])
(note 17 34 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 0 ax [71])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) backgroundfunctions.h:29 89 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 0 ax [orig:61 D.12041 ] [61])
        (sign_extend:DI (reg:SI 0 ax [71]))) backgroundfunctions.h:29 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [71])
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 1 dx [orig:62 D.12041 ] [62])
                (ashift:DI (reg:DI 0 ax [orig:61 D.12041 ] [61])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:61 D.12041 ] [61])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (set (reg/f:DI 0 ax [72])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg/f:DI 3 bx [orig:63 D.12042 ] [63])
                (plus:DI (reg:DI 1 dx [orig:62 D.12041 ] [62])
                    (reg/f:DI 0 ax [72])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:62 D.12041 ] [62])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
                        (reg:DI 1 dx [orig:62 D.12041 ] [62]))
                    (nil))))))
(insn 23 22 24 3 (set (reg:SI 0 ax [73])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [0 columns+0 S4 A32])) backgroundfunctions.h:29 89 {*movsi_internal}
     (nil))
(insn 24 23 25 3 (set (reg:DI 0 ax [orig:64 D.12041 ] [64])
        (sign_extend:DI (reg:SI 0 ax [73]))) backgroundfunctions.h:29 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [73])
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 0 ax [orig:65 D.12041 ] [65])
                (ashift:DI (reg:DI 0 ax [orig:64 D.12041 ] [64])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:29 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:64 D.12041 ] [64])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:65 D.12041 ] [65])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:65 D.12041 ] [65])
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:29 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 3 (set (reg/f:DI 0 ax [74])
        (reg:DI 0 ax)) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [74])
            (nil))))
(insn 29 28 30 3 (set (reg/f:DI 0 ax [orig:66 D.12043 ] [66])
        (reg/f:DI 0 ax [74])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [74])
        (nil)))
(insn 30 29 31 3 (set (mem/f:DI (reg/f:DI 3 bx [orig:63 D.12042 ] [63]) [0 *_9+0 S8 A64])
        (reg/f:DI 0 ax [orig:66 D.12043 ] [66])) backgroundfunctions.h:29 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 D.12043 ] [66])
        (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:63 D.12042 ] [63])
            (nil))))
(insn 31 30 32 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:28 273 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 75
(code_label 32 31 33 4 4 "" [1 uses])
(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 4 (set (reg:SI 0 ax [75])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [0 i+0 S4 A32])) backgroundfunctions.h:28 89 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [75])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [0 rows+0 S4 A32]))) backgroundfunctions.h:28 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [75])
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) backgroundfunctions.h:28 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 67 68
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 5 (set (reg/f:DI 0 ax [orig:67 D.12042 ] [67])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])) backgroundfunctions.h:31 87 {*movdi_internal_rex64}
     (nil))
(insn 42 39 46 5 (set (reg:DI 0 ax [orig:68 <retval> ] [68])
        (reg/f:DI 0 ax [orig:67 D.12042 ] [67])) backgroundfunctions.h:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:67 D.12042 ] [67])
        (nil)))
(insn 46 42 49 5 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:68 <retval> ] [68])) backgroundfunctions.h:32 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:68 <retval> ] [68])
        (nil)))
(insn 49 46 0 5 (use (reg/i:DI 0 ax)) backgroundfunctions.h:32 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function create1DArray (create1DArray, funcdef_no=2, decl_uid=11968, cgraph_uid=2)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) r  (1) rem {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 16
changing reg in insn 16
changing reg in insn 20
changing reg in insn 6
changing reg in insn 7
changing reg in insn 11
changing reg in insn 12
starting the processing of deferred insns
ending the processing of deferred insns


create1DArray

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d,9u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,6u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={2d} r18={1d} r19={1d} r20={1d,1u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 92{71d,21u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 62 63 64
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])
        (reg:SI 5 di [ columns ])) backgroundfunctions.h:42 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ columns ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 0 ax [63])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [0 columns+0 S4 A32])) backgroundfunctions.h:44 89 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 0 ax [orig:59 D.12044 ] [59])
        (sign_extend:DI (reg:SI 0 ax [63]))) backgroundfunctions.h:44 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [63])
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 0 ax [orig:60 D.12044 ] [60])
                (ashift:DI (reg:DI 0 ax [orig:59 D.12044 ] [59])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) backgroundfunctions.h:44 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.12044 ] [59])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:60 D.12044 ] [60])) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.12044 ] [60])
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7ff8f81baf00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) backgroundfunctions.h:44 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [64])
        (reg:DI 0 ax)) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 0 ax [64])
            (nil))))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg/f:DI 0 ax [64])) backgroundfunctions.h:44 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [64])
        (nil)))
(insn 13 12 16 2 (set (reg/f:DI 0 ax [orig:61 D.12045 ] [61])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) backgroundfunctions.h:45 87 {*movdi_internal_rex64}
     (nil))
(insn 16 13 20 2 (set (reg:DI 0 ax [orig:62 <retval> ] [62])
        (reg/f:DI 0 ax [orig:61 D.12045 ] [61])) backgroundfunctions.h:45 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.12045 ] [61])
        (nil)))
(insn 20 16 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:62 <retval> ] [62])) backgroundfunctions.h:46 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 <retval> ] [62])
        (nil)))
(insn 23 20 0 2 (use (reg/i:DI 0 ax)) backgroundfunctions.h:46 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sorRow (sorRow, funcdef_no=3, decl_uid=11977, cgraph_uid=3)


********** Local #1: **********

          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 16
	 Choosing alt 0 in insn 16:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) x  (1) m {*floatsidf2_sse_interunit}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=618,losers=2 -- reject
          alt=5,overall=615,losers=1 -- reject
          alt=6,overall=615,losers=1 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=17,losers=2 -- reject
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 18:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 19:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=71, assigning class NO_REGS to secondary r71
   29: r71:DF=r64:DF
      REG_DEAD r64:DF
    Inserting the sec. move after:
   46: xmm0:DF=r71:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 46:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 35: point = 0
   Insn 34: point = 0
   Insn 33: point = 1
   Insn 32: point = 2
   Insn 31: point = 2
   Insn 30: point = 2
   Insn 46: point = 2
	Hard reg 21 is preferable by r71 with profit 1
   Insn 29: point = 3
	Hard reg 21 is preferable by r71 with profit 1
	Hard reg 0 is preferable by r71 with profit 1
   Insn 28: point = 5
   Insn 27: point = 7
   Insn 26: point = 9
  BB 4
   Insn 24: point = 10
   Insn 23: point = 10
  BB 2
   Insn 44: point = 10
   Insn 8: point = 10
   Insn 7: point = 10
   Insn 6: point = 11
   Insn 2: point = 12
  BB 3
   Insn 19: point = 12
   Insn 18: point = 12
   Insn 17: point = 13
   Insn 16: point = 14
   Insn 15: point = 16
   Insn 14: point = 17
   Insn 13: point = 19
   Insn 12: point = 21
 r59: [18..19]
 r60: [15..17]
 r61: [12..14]
 r62: [12..13]
 r63: [6..7]
 r64: [4..5]
 r66: [10..11]
 r67: [20..21]
 r68: [15..16]
 r69: [8..9]
 r70: [0..1]
 r71: [2..3]
Compressing live ranges: from 22 to 20 - 90%
Ranges after the compression:
 r59: [16..17]
 r60: [14..15]
 r61: [12..13]
 r62: [12..13]
 r63: [6..7]
 r64: [4..5]
 r66: [10..11]
 r67: [18..19]
 r68: [14..15]
 r69: [8..9]
 r70: [0..1]
 r71: [2..3]

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 8):	 71
Changing spilled pseudos to memory in insn #29
Changing spilled pseudos to memory in insn #46

********** Local #3: **********

Reusing alternative 9 for insn #46
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 46:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 29:  (0) ?m  (1) rC {*movdf_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=32, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 16
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
changing reg in insn 34
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 35.


sorRow

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={13d,11u} r1={4d,1u,1e} r2={3d} r4={3d} r5={5d,3u} r6={1d,19u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={7d,1u} r18={2d} r19={2d} r20={1d,1u,2e} r21={5d,2u} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 174{126d,45u,3e} in 26{24 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 66
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])
        (reg:DI 5 di [ threadarg ])) thread2.c:15 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ threadarg ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 0 ax [66])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [0 threadarg+0 S8 A64])) thread2.c:17 87 {*movdi_internal_rex64}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
        (reg/f:DI 0 ax [66])) thread2.c:17 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [66])
        (nil)))
(insn 8 7 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
        (const_int 0 [0])) thread2.c:18 89 {*movsi_internal}
     (nil))
(jump_insn 44 8 45 2 (set (pc)
        (label_ref 20)) thread2.c:18 650 {jump}
     (nil)
 -> 20)
;;  succ:       4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 45 44 22)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 59 60 61 62 67 68
(code_label 22 45 11 3 11 "" [1 uses])
(note 11 22 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:SI 0 ax [67])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])) thread2.c:19 89 {*movsi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 0 ax [orig:59 D.12046 ] [59])
        (sign_extend:DI (reg:SI 0 ax [67]))) thread2.c:19 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [67])
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (reg:DI 1 dx [orig:60 D.12046 ] [60])
                (ashift:DI (reg:DI 0 ax [orig:59 D.12046 ] [59])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:59 D.12046 ] [59])
        (nil)))
(insn 15 14 16 3 (set (reg/f:DI 0 ax [68])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:19 87 {*movdi_internal_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg/f:DI 0 ax [orig:61 D.12047 ] [61])
                (plus:DI (reg/f:DI 0 ax [68])
                    (reg:DI 1 dx [orig:60 D.12046 ] [60])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:19 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [68])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:60 D.12046 ] [60])
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
                    (reg:DI 1 dx [orig:60 D.12046 ] [60]))
                (nil)))))
(insn 17 16 18 3 (set (reg:DF 21 xmm0 [orig:62 D.12048 ] [62])
        (float:DF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32]))) thread2.c:19 242 {*floatsidf2_sse_interunit}
     (nil))
(insn 18 17 19 3 (set (mem:DF (reg/f:DI 0 ax [orig:61 D.12047 ] [61]) [0 *_7+0 S8 A64])
        (reg:DF 21 xmm0 [orig:62 D.12048 ] [62])) thread2.c:19 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:62 D.12048 ] [62])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:61 D.12047 ] [61])
            (nil))))
(insn 19 18 20 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:18 273 {*addsi_1}
     (nil))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 20 19 21 4 10 "" [1 uses])
(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 21 24 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -12 [0xfffffffffffffff4])) [0 i+0 S4 A32])
            (const_int 9 [0x9]))) thread2.c:18 7 {*cmpsi_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) thread2.c:18 612 {*jcc_1}
     (nil)
 -> 22)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 63 64 69 70
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg/f:DI 0 ax [69])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.12047 ] [63])
                (plus:DI (reg/f:DI 0 ax [69])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:21 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [69])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 28 27 29 5 (set (reg:DF 0 ax [orig:64 D.12048 ] [64])
        (mem:DF (reg/f:DI 0 ax [orig:63 D.12047 ] [63]) [0 *_10+0 S8 A64])) thread2.c:21 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.12047 ] [63])
        (nil)))
(insn 29 28 46 5 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 %sfp+-32 S8 A64])
        (reg:DF 0 ax [orig:64 D.12048 ] [64])) thread2.c:21 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:64 D.12048 ] [64])
        (nil)))
(insn 46 29 30 5 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [0 %sfp+-32 S8 A64])) thread2.c:21 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 71)
        (nil)))
(insn 30 46 31 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7ff8f7eb65f0 *.LC0>)) thread2.c:21 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 5 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:21 91 {*movqi_internal}
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:21 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 33 32 34 5 (set (reg:DI 0 ax [70])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [0 thread_array+0 S8 A64])) thread2.c:22 87 {*movdi_internal_rex64}
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg:DI 0 ax [70])) thread2.c:22 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(call_insn 35 34 36 5 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:22 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 36 35 0)

;; Function main (main, funcdef_no=4, decl_uid=11986, cgraph_uid=4)

      Creating newreg=90
Removing SCRATCH in insn #5 (nop 2)
rescanning insn with uid = 5.
deleting insn with uid = 5.

********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=8,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r90
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 8:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 11:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 37:  (0) ?m  (1) rC {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (1) rzw {*call_value}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (1) rzw {*call_value}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 47:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 51:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 52:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) rzw {*call}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 70:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 74:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 83:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=6,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) ?r  (1) rm {*movdf_internal_rex64}
          alt=0,overall=1229,losers=4,rld_nregs=2
          alt=1,overall=624,losers=3,rld_nregs=1
          alt=3,overall=621,losers=2,rld_nregs=1
          alt=4,overall=17,losers=1,rld_nregs=0
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=12,losers=2,rld_nregs=1
          alt=9,overall=8,losers=1,rld_nregs=0
          alt=10,overall=11,losers=1 -- reject
          alt=12,overall=615,losers=2 -- reject
      Creating newreg=91, assigning class NO_REGS to secondary r91
   94: r91:DF=r64:DF
      REG_DEAD r64:DF
    Inserting the sec. move after:
  126: xmm0:DF=r91:DF

          alt=0,overall=617,losers=2,rld_nregs=1
          alt=1,overall=618,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=623,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=6,losers=1,rld_nregs=1
          alt=9,overall=1,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 126:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) q  (1) qn {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 98:  (0) rm  (1) 0  (2) re {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) rzw {*call}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10

********** Pseudo live ranges #1: **********

  BB 4
   Insn 66: point = 0
   Insn 65: point = 0
   Insn 64: point = 0
   Insn 63: point = 0
  BB 10
   Insn 106: point = 0
   Insn 105: point = 0
  BB 9
   Insn 103: point = 0
   Insn 102: point = 0
  BB 7
   Insn 124: point = 0
   Insn 77: point = 0
  BB 6
   Insn 75: point = 0
   Insn 74: point = 0
  BB 2
   Insn 122: point = 0
   Insn 15: point = 0
   Insn 14: point = 0
   Insn 13: point = 0
   Insn 12: point = 1
   Insn 11: point = 1
   Insn 10: point = 2
   Insn 9: point = 2
   Insn 8: point = 3
   Insn 5: point = 4
   Insn 3: point = 6
   Insn 2: point = 6
  BB 5
   Insn 70: point = 6
  BB 3
   Insn 61: point = 6
   Insn 60: point = 6
   Insn 59: point = 6
   Insn 58: point = 7
   Insn 57: point = 8
   Insn 56: point = 8
   Insn 55: point = 9
   Insn 54: point = 10
   Insn 53: point = 10
   Insn 52: point = 11
   Insn 51: point = 12
   Insn 50: point = 13
   Insn 49: point = 15
   Insn 48: point = 17
   Insn 47: point = 18
   Insn 46: point = 19
   Insn 45: point = 19
   Insn 44: point = 19
   Insn 43: point = 19
   Insn 42: point = 20
   Insn 41: point = 21
   Insn 40: point = 22
   Insn 39: point = 23
   Insn 38: point = 23
   Insn 37: point = 23
   Insn 36: point = 24
   Insn 35: point = 25
   Insn 34: point = 27
   Insn 33: point = 29
   Insn 32: point = 31
   Insn 31: point = 32
   Insn 30: point = 32
   Insn 29: point = 33
   Insn 28: point = 34
   Insn 27: point = 35
   Insn 26: point = 37
   Insn 25: point = 39
   Insn 24: point = 41
   Insn 23: point = 42
   Insn 22: point = 42
   Insn 21: point = 43
   Insn 20: point = 44
   Insn 19: point = 46
  BB 8
   Insn 98: point = 47
   Insn 97: point = 47
   Insn 96: point = 47
   Insn 95: point = 47
   Insn 126: point = 47
	Hard reg 21 is preferable by r91 with profit 1
   Insn 94: point = 48
	Hard reg 21 is preferable by r91 with profit 1
	Hard reg 0 is preferable by r91 with profit 1
   Insn 93: point = 50
   Insn 92: point = 52
   Insn 91: point = 54
   Insn 90: point = 55
   Insn 89: point = 56
   Insn 88: point = 57
   Insn 87: point = 58
   Insn 86: point = 59
   Insn 85: point = 59
   Insn 84: point = 60
   Insn 83: point = 61
   Insn 82: point = 62
   Insn 81: point = 64
 r59: [34..44]
 r60: [21..22]
 r61: [8..13]
 r62: [59..62]
 r63: [51..52]
 r64: [49..50]
 r66: [2..3]
 r67: [0..1]
 r68: [45..46]
 r69: [41..43]
 r70: [40..42] [36..37]
 r71: [38..39]
 r72: [34..35]
 r73: [31..33]
 r74: [30..32] [26..27]
 r75: [28..29]
 r76: [23..25]
 r77: [23..24]
 r78: [19..20]
 r79: [14..18]
 r80: [14..15]
 r81: [16..17]
 r82: [10..12]
 r83: [9..11]
 r84: [6..7]
 r85: [63..64]
 r86: [60..61]
 r87: [57..58]
 r88: [55..56]
 r89: [53..54]
 r90: [4..5]
 r91: [47..48]
Compressing live ranges: from 65 to 52 - 80%
Ranges after the compression:
 r59: [26..33]
 r60: [16..17]
 r61: [8..9]
 r62: [48..49]
 r63: [40..41]
 r64: [38..39]
 r66: [2..3]
 r67: [0..1]
 r68: [34..35]
 r69: [32..33]
 r70: [32..33] [28..29]
 r71: [30..31]
 r72: [26..27]
 r73: [24..25]
 r74: [24..25] [20..21]
 r75: [22..23]
 r76: [18..19]
 r77: [18..19]
 r78: [14..15]
 r79: [10..13]
 r80: [10..11]
 r81: [12..13]
 r82: [8..9]
 r83: [8..9]
 r84: [6..7]
 r85: [50..51]
 r86: [48..49]
 r87: [46..47]
 r88: [44..45]
 r89: [42..43]
 r90: [4..5]
 r91: [36..37]
	 Assigning to 90 (cl=INDEX_REGS, orig=90, freq=1, tfirst=90, tfreq=1)...
	   Assign 0 to reload r90 (freq=1)

********** Undoing inheritance #1: **********


********** Local #2: **********

  Slot 0 regnos (width = 8):	 91
Changing spilled pseudos to memory in insn #94
Changing spilled pseudos to memory in insn #126

********** Local #3: **********

Reusing alternative 9 for insn #126
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 126:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=1223,losers=3,rld_nregs=2
          alt=1,overall=613,losers=2,rld_nregs=1
          alt=3,overall=615,losers=1 -- reject
          alt=4,overall=6,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 94:  (0) ?m  (1) rC {*movdf_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 20
changing reg in insn 28
changing reg in insn 40
changing reg in insn 41
changing reg in insn 50
changing reg in insn 56
changing reg in insn 82
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 8
changing reg in insn 9
changing reg in insn 11
changing reg in insn 13
changing reg in insn 19
changing reg in insn 21
changing reg in insn 24
changing reg in insn 22
changing reg in insn 24
changing reg in insn 26
changing reg in insn 24
changing reg in insn 23
changing reg in insn 22
changing reg in insn 27
changing reg in insn 25
changing reg in insn 24
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 30
changing reg in insn 32
changing reg in insn 34
changing reg in insn 32
changing reg in insn 31
changing reg in insn 30
changing reg in insn 35
changing reg in insn 33
changing reg in insn 32
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 43
changing reg in insn 47
changing reg in insn 50
changing reg in insn 49
changing reg in insn 50
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 55
changing reg in insn 58
changing reg in insn 59
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 92
changing reg in insn 5
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0]
;;  ref usage 	r0={41d,33u} r1={19d,10u,2e} r2={13d,2u} r4={15d,5u} r5={22d,12u} r6={1d,43u} r7={1d,20u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={33d,3u} r18={10d} r19={10d} r20={1d,1u,2e} r21={12d,1u} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} 
;;    total ref usage 671{537d,130u,4e} in 87{77 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 66 67
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) thread2.c:25 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ argc ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) thread2.c:25 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ argv ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [0 D.12057+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [90])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:25 966 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [90])
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 0 ax [66])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:30 274 {*adddi_1}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [66])) thread2.c:30 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [66])
        (nil)))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_init") [flags 0x41]  <function_decl 0x7ff8f8272200 pthread_attr_init>) [0 pthread_attr_init S1 A8])
            (const_int 0 [0]))) thread2.c:30 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 0 ax [67])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:31 274 {*adddi_1}
     (nil))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 0 [0])) thread2.c:31 89 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [67])) thread2.c:31 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [67])
        (nil)))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_attr_setdetachstate") [flags 0x41]  <function_decl 0x7ff8f8272500 pthread_attr_setdetachstate>) [0 pthread_attr_setdetachstate S1 A8])
            (const_int 0 [0]))) thread2.c:31 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (nil))))
(insn 15 14 122 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:32 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 122 15 123 2 (set (pc)
        (label_ref 71)) thread2.c:32 650 {jump}
     (nil)
 -> 71)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 123 122 73)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 59 60 61 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
(code_label 73 123 18 3 15 "" [1 uses])
(note 18 73 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:DI 0 ax [68])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 20 19 21 3 (set (reg:SI 2 cx [orig:59 D.12051 ] [59])
        (reg:SI 0 ax [68])) thread2.c:34 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [68])
        (nil)))
(insn 21 20 22 3 (set (reg:DI 1 dx [69])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 22 21 23 3 (set (reg:DI 0 ax [70])
        (reg:DI 1 dx [69])) thread2.c:34 87 {*movdi_internal_rex64}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:DI 0 ax [70])
                (ashift:DI (reg:DI 0 ax [70])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 513 {*ashldi3_1}
     (nil))
(insn 24 23 25 3 (parallel [
            (set (reg:DI 0 ax [70])
                (plus:DI (reg:DI 0 ax [70])
                    (reg:DI 1 dx [69])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [69])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [69])
                (const_int 3 [0x3]))
            (nil))))
(insn 25 24 26 3 (parallel [
            (set (reg:DI 0 ax [71])
                (ashift:DI (reg:DI 0 ax [70])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(insn 26 25 27 3 (set (reg:DI 0 ax [70])
        (reg:DI 0 ax [71])) thread2.c:34 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [71])
        (nil)))
(insn 27 26 28 3 (parallel [
            (set (reg/f:DI 0 ax [72])
                (plus:DI (reg:DI 0 ax [70])
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:34 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [70])
        (nil)))
(insn 28 27 29 3 (set (mem/j:SI (reg/f:DI 0 ax [72]) [0 thread_data_array[t_1].thread_id+0 S4 A64])
        (reg:SI 2 cx [orig:59 D.12051 ] [59])) thread2.c:34 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [72])
        (expr_list:REG_DEAD (reg:SI 2 cx [orig:59 D.12051 ] [59])
            (nil))))
(insn 29 28 30 3 (set (reg:DI 1 dx [73])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 30 29 31 3 (set (reg:DI 0 ax [74])
        (reg:DI 1 dx [73])) thread2.c:35 87 {*movdi_internal_rex64}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (reg:DI 0 ax [74])
                (ashift:DI (reg:DI 0 ax [74])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 513 {*ashldi3_1}
     (nil))
(insn 32 31 33 3 (parallel [
            (set (reg:DI 0 ax [74])
                (plus:DI (reg:DI 0 ax [74])
                    (reg:DI 1 dx [73])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [73])
        (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [73])
                (const_int 3 [0x3]))
            (nil))))
(insn 33 32 34 3 (parallel [
            (set (reg:DI 0 ax [75])
                (ashift:DI (reg:DI 0 ax [74])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [74])
        (nil)))
(insn 34 33 35 3 (set (reg:DI 0 ax [74])
        (reg:DI 0 ax [75])) thread2.c:35 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [75])
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg/f:DI 1 dx [76])
                (plus:DI (reg:DI 0 ax [74])
                    (symbol_ref:DI ("thread_data_array")  <var_decl 0x7ff8f7e96720 thread_data_array>)))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:35 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [74])
        (nil)))
(insn 36 35 37 3 (set (reg:DF 0 ax [77])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S8 A64])) thread2.c:35 133 {*movdf_internal_rex64}
     (nil))
(insn 37 36 38 3 (set (mem/j:DF (plus:DI (reg/f:DI 1 dx [76])
                (const_int 8 [0x8])) [0 thread_data_array[t_1].tol+0 S8 A64])
        (reg:DF 0 ax [77])) thread2.c:35 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [77])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [76])
            (nil))))
(insn 38 37 39 3 (set (reg:SI 5 di)
        (const_int 10 [0xa])) thread2.c:36 89 {*movsi_internal}
     (nil))
(call_insn 39 38 40 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("create1DArray") [flags 0x3]  <function_decl 0x7ff8f7e90700 create1DArray>) [0 create1DArray S1 A8])
            (const_int 0 [0]))) thread2.c:36 663 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (nil))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
(insn 40 39 41 3 (set (reg/f:DI 0 ax [orig:60 array.0 ] [60])
        (reg:DI 0 ax)) thread2.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 41 40 42 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 array+0 S8 A64])
        (reg/f:DI 0 ax [orig:60 array.0 ] [60])) thread2.c:36 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:60 array.0 ] [60])
        (nil)))
(insn 42 41 43 3 (set (reg:DI 0 ax [78])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 43 42 44 3 (set (reg:DI 4 si)
        (reg:DI 0 ax [78])) thread2.c:38 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [78])
        (nil)))
(insn 44 43 45 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7ff8f7ebd130 *.LC2>)) thread2.c:38 87 {*movdi_internal_rex64}
     (nil))
(insn 45 44 46 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) thread2.c:38 91 {*movqi_internal}
     (nil))
(call_insn 46 45 47 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:38 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
                (nil)))))
(insn 47 46 48 3 (parallel [
            (set (reg:DI 0 ax [79])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (nil))
(insn 48 47 49 3 (set (reg:DI 1 dx [81])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])) thread2.c:39 87 {*movdi_internal_rex64}
     (nil))
(insn 49 48 50 3 (parallel [
            (set (reg:DI 1 dx [80])
                (ashift:DI (reg:DI 1 dx [81])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 513 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [81])
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(insn 50 49 51 3 (parallel [
            (set (reg/f:DI 5 di [orig:61 D.12052 ] [61])
                (plus:DI (reg:DI 0 ax [79])
                    (reg:DI 1 dx [80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [80])
        (expr_list:REG_DEAD (reg:DI 0 ax [79])
            (nil))))
(insn 51 50 52 3 (parallel [
            (set (reg:DI 1 dx [82])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (nil))
(insn 52 51 53 3 (parallel [
            (set (reg:DI 0 ax [83])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:39 274 {*adddi_1}
     (nil))
(insn 53 52 54 3 (set (reg:DI 2 cx)
        (reg:DI 1 dx [82])) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [82])
        (nil)))
(insn 54 53 55 3 (set (reg:DI 1 dx)
        (symbol_ref:DI ("sorRow") [flags 0x3]  <function_decl 0x7ff8f7e90800 sorRow>)) thread2.c:39 87 {*movdi_internal_rex64}
     (nil))
(insn 55 54 56 3 (set (reg:DI 4 si)
        (reg:DI 0 ax [83])) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [83])
        (nil)))
(insn 56 55 57 3 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:61 D.12052 ] [61])) thread2.c:39 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:61 D.12052 ] [61])
        (nil)))
(call_insn 57 56 58 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7ff8f8260c00 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) thread2.c:39 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (nil))))))
(insn 58 57 59 3 (set (reg:SI 0 ax [84])
        (reg:SI 0 ax)) thread2.c:39 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 59 58 60 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 0 ax [84])) thread2.c:39 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [84])
        (nil)))
(insn 60 59 61 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
            (const_int 0 [0]))) thread2.c:40 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 61 60 62 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) thread2.c:40 612 {*jcc_1}
     (nil)
 -> 68)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 62 61 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7ff8f7ebd1c8 *.LC3>)) thread2.c:41 87 {*movdi_internal_rex64}
     (nil))
(call_insn 64 63 65 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7ff8f819fd00 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) thread2.c:41 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 65 64 66 4 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) thread2.c:42 89 {*movsi_internal}
     (nil))
(call_insn 66 65 67 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7ff8f81b3900 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) thread2.c:42 656 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:REG_BR_PRED (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 67 66 68)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 68 67 69 5 14 "" [1 uses])
(note 69 68 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 5 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:32 274 {*adddi_1}
     (nil))
;;  succ:       6 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 71 70 72 6 13 "" [1 uses])
(note 72 71 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 74 72 75 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:32 8 {*cmpdi_1}
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) thread2.c:32 612 {*jcc_1}
     (nil)
 -> 73)
;;  succ:       3
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 124 7 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
        (const_int 0 [0])) thread2.c:45 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 124 77 125 7 (set (pc)
        (label_ref 99)) thread2.c:45 650 {jump}
     (nil)
 -> 99)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 125 124 101)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 62 63 64 85 86 87 88 89
(code_label 101 125 80 8 17 "" [1 uses])
(note 80 101 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 8 (set (reg:DI 0 ax [85])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])) thread2.c:48 87 {*movdi_internal_rex64}
     (nil))
(insn 82 81 83 8 (set (reg:DI 0 ax [orig:62 D.12053 ] [62])
        (mem/j:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [85])
                        (const_int 8 [0x8]))
                    (reg/f:DI 6 bp))
                (const_int -96 [0xffffffffffffffa0])) [0 threads S8 A64])) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [85])
        (nil)))
(insn 83 82 84 8 (parallel [
            (set (reg:DI 1 dx [86])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:48 274 {*adddi_1}
     (nil))
(insn 84 83 85 8 (set (reg:DI 4 si)
        (reg:DI 1 dx [86])) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [86])
        (nil)))
(insn 85 84 86 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:62 D.12053 ] [62])) thread2.c:48 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:62 D.12053 ] [62])
        (nil)))
(call_insn 86 85 87 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7ff8f8260e00 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) thread2.c:48 663 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 8 (set (reg:SI 0 ax [87])
        (reg:SI 0 ax)) thread2.c:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 88 87 89 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [0 rc+0 S4 A32])
        (reg:SI 0 ax [87])) thread2.c:48 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [87])
        (nil)))
(insn 89 88 90 8 (set (reg/f:DI 0 ax [88])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 retval+0 S8 A64])) thread2.c:49 87 {*movdi_internal_rex64}
     (nil))
(insn 90 89 91 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
        (reg/f:DI 0 ax [88])) thread2.c:49 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [88])
        (nil)))
(insn 91 90 92 8 (set (reg/f:DI 0 ax [89])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])) thread2.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 92 91 93 8 (parallel [
            (set (reg/f:DI 0 ax [orig:63 D.12054 ] [63])
                (plus:DI (reg/f:DI 0 ax [89])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:50 274 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [89])
        (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -104 [0xffffffffffffff98])) [0 array+0 S8 A64])
                (const_int 16 [0x10]))
            (nil))))
(insn 93 92 94 8 (set (reg:DF 0 ax [orig:64 D.12055 ] [64])
        (mem:DF (reg/f:DI 0 ax [orig:63 D.12054 ] [63]) [0 *_13+0 S8 A64])) thread2.c:50 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:63 D.12054 ] [63])
        (nil)))
(insn 94 93 126 8 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S8 A64])
        (reg:DF 0 ax [orig:64 D.12055 ] [64])) thread2.c:50 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 0 ax [orig:64 D.12055 ] [64])
        (nil)))
(insn 126 94 95 8 (set (reg:DF 21 xmm0)
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S8 A64])) thread2.c:50 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 91)
        (nil)))
(insn 95 126 96 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7ff8f7ebd260 *.LC4>)) thread2.c:50 87 {*movdi_internal_rex64}
     (nil))
(insn 96 95 97 8 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) thread2.c:50 91 {*movqi_internal}
     (nil))
(call_insn 97 96 98 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7ff8f819f800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) thread2.c:50 663 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 98 97 99 8 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) thread2.c:45 274 {*adddi_1}
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 99 98 100 9 16 "" [1 uses])
(note 100 99 102 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 102 100 103 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [0 t+0 S8 A64])
            (const_int 2 [0x2]))) thread2.c:45 8 {*cmpdi_1}
     (nil))
(jump_insn 103 102 104 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) thread2.c:45 612 {*jcc_1}
     (nil)
 -> 101)
;;  succ:       8
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 104 103 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 10 (set (reg:DI 5 di)
        (const_int 0 [0])) thread2.c:52 87 {*movdi_internal_rex64}
     (nil))
(call_insn 106 105 107 10 (call (mem:QI (symbol_ref:DI ("pthread_exit") [flags 0x41]  <function_decl 0x7ff8f8260d00 pthread_exit>) [0 pthread_exit S1 A8])
        (const_int 0 [0])) thread2.c:52 656 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 107 106 0)
